pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)#temas de gráficos
pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)#temas de gráficos
# 00. Carga de Paquetes --------------------------------------------------------
pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)#temas de gráficos
# 01. Cargar datos--------------------------------------------------------
base <- read.xlsx("base_antropologia_limpia.xlsx")
View(base)
source("~/Campusano_prueba 2 r.project/Scrip RRSS.R")
num_filas <- nrow(datos)
num_filas <- nrow(datos)
num_filas <- nrow(datos)
num_filas <- nrow(base)
num_columnas <- ncol(base)
#02. Renombrar variables
#02.01: observe las variables de la base de datos con names(0.5)
names(base)
# base <- base %>% dplyr::rename(tiempo rs = RS_01,
#                                razones rs = RS_02,
#                                experimentacion rs = RS_03,
#                                estres rs = RS_04)
#02.02: renombre 4 variables pertenecientes al grupo del cual usted participa(2 ptos)
# Para designar nuevos nombres a sus variables se puede apoyar en las siguientes etiquetas de las preguntas (use sólo las de su grupo):
base <- base %>% dplyr::rename(tiempo_rs = RS_01,
razones_rs = RS_02,
experimentacion_rs = RS_03,
estres_rs = RS_04)
#02.02: renombre 4 variables pertenecientes al grupo del cual usted participa(2 ptos)
# Para designar nuevos nombres a sus variables se puede apoyar en las siguientes etiquetas de las preguntas (use sólo las de su grupo):
base <- base %>% dplyr::rename(tiempo_rs = RS_01,
razones_rs = RS_02,
experimentacion_rs = RS_03,
estres_rs = RS_04)
base <- base %>% dplyr::rename(tiempo_rs = RS_01)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
base <- base %>% dplyr::rename(tiempo_rs = RS_01)
install.packages("dplyr")
library(dplyr)
library(dplyr)
base <- base %>% dplyr::rename(tiempo_rs = RS_01)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
base <- base %>% dplyr::rename(tiempo_rs = RS_01)
base <- base %>% dplyr::rename(tiempo_rs = RS_01)
base <- base %>% dplyr::rename(tiempo_rs = rs_01)
base <- base %>% dplyr::rename(razones_rs = rs_02 )
base <- base %>% dplyr::rename(sensaciones_rs = rs_03)
base <- base %>% dplyr::rename(estres_rs = rs_04)
base <- base %>% dplyr::rename(tiempo_rs = rs_01)
base <- base %>% dplyr::rename(tiempo_rs = rs_01)
names(base)
base <- base %>% rename(lugar_musica = cm_05)
table(base$lugar_musica)
respuestas <- strsplit(base$lugar_musica, ",")
table(base$lugar_musica)
respuestas <- unlist(respuestas)
print(respuestas)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub(" En el transporte público", "En el transporte público", respuestas )
respuestas <- gsub(" En otros lugares", "En otros lugares", respuestas )
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
campusano_martin<-  freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
base <- base %>%
mutate(re_02_recod = case_when(
re_02 %in% c("Católica", "Protestante") ~ "Cristiana",
re_02 %in% c("Ateo", "Agnóstico") ~ "No religioso",
re_02 == "Otra" ~ "Otra",
TRUE ~ re_02))
# 04.1 observe las categorías de respuesta de esta variable (0.5 pto)
table(base$re_02)
datos <- datos %>%
mutate(religion_rec = case_when(
religion == "Musulmana" ~ "Islam",
TRUE ~ as.character(religion)))
base <- base %>%
mutate(religion_rec = case_when(re_02%in% c("Católica", "Protestante") ~ "Cristiana",
re_02 %in% c("Budista", "Hinduista", "Taoísta") ~ "Otras religiones",
re_02 == "Agnóstico" ~ "Espiritual no religioso",
re_02 == "Ateo" ~ "No religioso",
TRUE ~ "Otro"
))
base <- base %>%
mutate(religion_rec = case_when(
re_02 %in% c("Católica", "Protestante") ~ "Cristiana",
re_02 %in% c("Budista", "Hinduista", "Taoísta") ~ "Otras religiones",
re_02 == "Agnóstico" ~ "Espiritual no religioso",
re_02 == "Ateo" ~ "No religioso",
TRUE ~ "Otro"
))
unique(base$religion_rec)
base <- base %>%  mutate(religion_rec= case_when(religion_rec%in% c("No tengo una afiliación religiosa, pero si me considero una persona espiritual (por ejemplo, creo en las energías)","seria en creer en alguien superior un tipo de energía que se interpreta de diversas formas en la religión pero no es alguien al cual se le pueda poner un nombre", "deísmo")~"Espiritualidad_sin_afiliación_religiosa",
religion_rec%in% c("Catolico","Cristianismo Protestante (Evangélico, anglicano, etcétera)","Grecorromana ","Yoruba ","Ortodoxo")~"religion_especifica",
religion_rec %in% c("Pagana","Ateo","Agnóstico","No tengo afiliaciones religiosas y tampoco me adscribo a ningún tipo de corriente de pensamiento de tipo clasificatoria","Ninguno ")~"sin_religion",
TRUE~religion_rec))
table(base$religion_rec)
base <- base %>% mutate(to_01=case_when(to_01%in% c("Bastante tiempo.", "Suficiente tiempo.")~"tiempo_disponible",
to_01 %in% c("No tengo tiempo.", "Poco tiempo.")~ "tiempo_limitado",
TRUE~to_01))
ggplot(base, aes(x = religion_rec, y = ea_04_notas_ultimo_semestre, fill = religion_rec)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Promedio de notas según tipo de religión",
y = "Promedio de notas último semestre",
fill = "Religión"
) +
theme_minimal()
names(base)
ggplot(base, aes(x = to_01, y = ea_04_notas_ultimo_semestre, fill = to_01)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
theme_minimal()
names(base)
ggplot(base, aes(x = base, y = fct_reorder(lugar_musica, base), fill=lugar_musica)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Lugares donde escuchan música",
subtitle = "Estudiantes de antropología",
caption = "Fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
ggplot(base, aes(x = religion_rec, y = ea_04_notas_ultimo_semestre, fill = religion_rec)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Promedio de notas según tipo de religión",
y = "Promedio de notas último semestre",
fill = "Religión"
) +
theme_minimal()
names(base)
ggplot(base, aes(x = to_01, y = ea_04_notas_ultimo_semestre, fill = to_01)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
theme_minimal()
names(base)
