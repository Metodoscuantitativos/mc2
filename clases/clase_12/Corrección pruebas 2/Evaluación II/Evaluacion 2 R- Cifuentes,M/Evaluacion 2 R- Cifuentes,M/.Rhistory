# 00. Carga de Paquetes --------------------------------------------------------
pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)#temas de gráficos
# 01. Cargar datos--------------------------------------------------------
base <- read.xlsx("base_antropologia_limpia.xlsx")
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
glimpse(base)
str(base)
summary(base)
names(base)
view(base)
base <- base %>% dplyr::rename(actividad_extracurriculares = to_01) #TO_04. ¿Cuáles de estas actividades prefiere realizar en su tiempo de ocio?
base <- base %>% dplyr::rename(Tiempo_ocio = to_03)
base <- base %>% dplyr::rename(actividades_preferidas = to_04)
base <- base %>% dplyr::rename(Importancia_tiempo = to_06)
names(base)
base <- base %>% dplyr::rename(lugar_musica = cm_05)
names(base)
table(base$lugar_musica)
unique(base$lugar_musica)
freq(base$lugar_musica)
respuestas <- strsplit(base$lugar_musica, ",")
respuestas <- unlist(respuestas)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub(" En el transporte público", "En el transporte público",  respuestas ) #(1 pto)
respuestas <- trimws(" En otros lugares", "En otros lugares", respuestas ) #(1 pto)
respuestas <- trimws(" En otros lugares", "En otros lugares", respuestas ) #(1 pto)
respuestas <- gsub(" En otros lugares", "En otros lugares", respuestas ) #(1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
lugar_musica <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
View(base)
View(lugar_musica)
base <- base %>% dplyr::rename(Creencia_religiosa = re_02)
names(base)
str(base$Creencia_religiosa)
str(Creencia_religiosa)
# 04.2 recodifique las categorías de esta variable en una nueva variable denominada "religion_rec" de la siguiente forma (3 ptos)
# Hint:  debe utilizar la función case_when()
table(base$Creencia_religiosa)
base <- base %>%
mutate(
religion_rec = case_when(
Creencia_religiosa == "Católico" ~ "Grecorromana",
Creencia_religiosa == "deísmo" ~ "Cristianismo_Protestante",
Creencia_religiosa == "Ortodoxo" ~ "Ninguno  ",
Creencia_religiosa == "Musulmana" ~ "Agnóstico",
TRUE ~ "Otra"
)
)
base <- base %>%
mutate(re_02 = case_when(re_02 ==  "Yoruba " ~ "Otra",
re_02 ==  "Grecorromana " ~ "Otra",
re_02 ==  "Grecorromana" ~ "Otra",
re_02 ==  "Ortodoxo" ~ "Ortodoxa",
re_02 ==  "Cristianismo Protestante (Evangélico, anglicano, etcétera)" ~ "Cristianismo protestante",
re_02 ==  "No tengo afiliaciones religiosas y tampoco me adscribo a ningún tipo de corriente de pensamiento de tipo clasificatoria" ~ "Ninguna",
re_02 ==  "Catolico" ~ "Catolicismo",
re_02 ==  "deísmo" ~ "Deísmo",
re_02 ==  "Agnóstico" ~ "Agnóstico/a",
re_02 ==  "Ateo" ~ "Ninguna",
re_02 ==  "Ninguno " ~ "Ninguna",
re_02 ==  "Pagana" ~ "Otra",
re_02 ==  "No tengo una afiliación religiosa, pero si me considero una persona espiritual (por ejemplo, creo en las energías)." ~ "Otra",
re_02 ==  "seria en creer en alguien superior un tipo de energía que se interpreta de diversas formas en la religión pero no es alguien al cual se le pueda poner un nombre" ~ "Otra",
TRUE ~ re_02))
unique(base$Creencia_religiosa)
base <- base %>%
mutate(
religion_rec = case_when(
Creencia_religiosa %in% c("No tengo una afiliación religiosa, pero si me considero una persona espiritual (por ejemplo, creo en las energías).",
"seria en creer en alguien superior un tipo de energía que se interpreta de diversas formas en la religión pero no es alguien al cual se le pueda poner un nombre",
"deísmo") ~ "Espiritual",
Creencia_religiosa %in% c("Catolico", "Cristianismo Protestante (Evangélico, anglicano, etcétera)",
"Grecorromana", "Yoruba", "Ortodoxo") ~ "Religiosa",
Creencia_religiosa %in% c("Pagana", "Ateo", "Agnóstico",
"No tengo afiliaciones religiosas y tampoco me adscribo a ningún tipo de corriente de pensamiento de tipo clasificatoria",
"Ninguno ") ~ "Otra",
TRUE ~ "Otra"  # Cualquier otro caso no especificado
)
)
table(base$Creencia_religiosa)
base <- base %>%
mutate(
to_01 = case_when(
to_01 %in% c("Bastante tiempo.", "Suficiente tiempo.") ~ "Tiempo disponible",
to_01 %in% c("No tengo tiempo.", "Poco tiempo.") ~ "Tiempo limitado",
TRUE ~ to_01  # Mantener cualquier otro valor que no coincida con las condiciones anteriores
)
)
names(base)
base <- base %>%
mutate(
actividad_extracurriculares = case_when(
actividad_extracurriculares %in% c("Bastante tiempo.", "Suficiente tiempo.") ~ "Tiempo disponible",
actividad_extracurriculares %in% c("No tengo tiempo.", "Poco tiempo.") ~ "Tiempo limitado",
TRUE ~ actividad_extracurriculares
)
)
ggplot(ea_04_notas_ultimo_semestre_, aes(x =fct_reorder(respuestas, pct), y = pct, fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "ea_04_notas_ultimo_semestre",
caption = "fuente: base_antropologia_limpia.xlsx")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
mean_ea_04 <- mean(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
median_ea_04 <- median(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
sd_ea_04 <- sd(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
var_ea_04 <- var(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
ggplot(base, aes(x = Creencia_religiosa, y = ea_04_notas_ultimo_semestre, fill = Creencia_religiosa)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Promedio de notas según tipo de religión",
y = "Promedio de notas último semestre",
fill = "Religión"
) +
theme_minimal()
ggplot(base, aes(x = to_01, y = ea_04_notas_ultimo_semestre, fill = to_01)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
# 07.3 ahora grafique la distribución de los resultados guardados en el punto 03.8 con el siguiente código (3 ptos)
# recuerde que el nombre era su "nombre_apellido"
ggplot(_____, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
ggplot(base, aes(x = to_01, y = ea_04_notas_ultimo_semestre, fill = to_01)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
# 07.3 ahora grafique la distribución de los resultados guardados en el punto 03.8 con el siguiente código (3 ptos)
# recuerde que el nombre era su "nombre_apellido"
ggplot(_____, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
ggplot(base, aes(x = actividad_extracurricular, y = ea_04_notas_ultimo_semestre, fill = actividad_extracurricular )) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
# 07.3 ahora grafique la distribución de los resultados guardados en el punto 03.8 con el siguiente código (3 ptos)
# recuerde que el nombre era su "nombre_apellido"
ggplot(_____, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
ggplot(base, aes(x = actividad_extracurricular, y = ea_04_notas_ultimo_semestre, fill = actividad_extracurricular )) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
ggplot(base, aes(x = to_01, y = ea_04_notas_ultimo_semestre, fill = to_01)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
theme_minimal()
names(base)
ggplot(base, aes(x = actividad_extracurriculares, y = ea_04_notas_ultimo_semestre, fill = actividad_extracurriculares)) +
geom_boxplot(alpha = 0.3) +
labs(
title = "Notas último semestre según tiempo disponible",
y = "Promedio de notas último semestre",
fill = "Tiempo"
) +
theme_minimal()
respuestas <- gsub(" En el transporte público", "En el transporte público",  respuestas ) #(1 pto)
respuestas <- gsub(" En otros lugares", "En otros lugares", respuestas ) #(1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
ggplot(lugar_musica, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "lugar musica estudiantes Antropología",
subtitle = "Encuesta Estudiantes 2024", #(opcional)
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
View(lugar_musica)
base <- base %>% dplyr::rename(Creencia_religiosa = re_02)
respuestas <- strsplit(base$Creencia_religiosa, ",")
View(respuestas)
View(respuestas)
p
# 00. Carga de Paquetes --------------------------------------------------------
pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)#temas de gráficos
# 01. Cargar datos--------------------------------------------------------
base <- read.xlsx("base_antropologia_limpia.xlsx")
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
glimpse(base)
str(base)
summary(base)
names(base)
view(base)
base <- base %>% dplyr::rename(actividad_extracurriculares = to_01)
base <- base %>% dplyr::rename(Tiempo_ocio = to_03)
base <- base %>% dplyr::rename(actividades_preferidas = to_04)
base <- base %>% dplyr::rename(Importancia_tiempo = to_06)
names(base)
base <- base %>% dplyr::rename(lugar_musica = cm_05)
names(base)
table(base$lugar_musica)
unique(base$lugar_musica)
freq(base$lugar_musica)
respuestas <- strsplit(base$lugar_musica, ",")
respuestas <- strsplit(base$Creencia_religiosa, ",") ###
respuestas <- unlist(respuestas)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub(" En el transporte público", "En el transporte público",  respuestas ) #(1 pto)
respuestas <- gsub(" En otros lugares", "En otros lugares", respuestas ) #(1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
