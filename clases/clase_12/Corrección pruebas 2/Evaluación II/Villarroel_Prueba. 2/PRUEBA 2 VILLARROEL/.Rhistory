pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)
base <- read.xlsx("base_antropologia_limpia.xlsx")
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
glimpse(base)
str(base)
summary(base)
names(base)
view(base)
#02. Renombrar variables
#02.01: observe las variables de la base de datos con names(0.5)
names(base)
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
nrow(base_antropologia) #147 cantidad de casos
# 01. Cargar datos--------------------------------------------------------
base <- read.xlsx("base_antropologia_limpia.xlsx")
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
nrow(base_antropologia) #147 cantidad de casos
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
nrow(base_antropologia_limpia) #147 cantidad de casos
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
nrow(base) #147 cantidad de casos
ncol(base) #60 cantidad de variables
sapply(base, FUN = class) # sapply: realiza función class a todas las variables
str(base)
#02. Renombrar variables
#02.01: observe las variables de la base de datos con names(0.5)
names(base)
base <- base %>% dplyr::rename(ocio_y_dias = TO_02,
seleccion_actividad_ocio = TO_04,
pertenencia_agrupación_ocio = TO_05,
importancia_activ_ocio = TO_06)
# Puede utilizar el siguiente formato
library(dplyr)
base <- base %>% dplyr::rename(ocio_y_dias = to_02, seleccion_actividdad_ocio= to_04, pertenecia_agrupacion_ocio = to_05, importancia_activ_ocio = to_06)
names(base)
base <- base %>% dplyr::rename(lugar_musica=cm_05)
# 03.2 observe las categorías de la variable lugar_musica, puede utilizar funciones como freq, table, unique, etc. (0.5 ptos)
unique(base$lugar_musica)
respuesta <- strsplit(base$lugar_musica, ",")
respuestas <- unilist(respuestas)
respuestas <- unlistrespuestas)
respuestas <- unlist(respuestas)
respuestas <- unlist(respuesta)
freq(respuesta, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# 03.5 observe las respuestas con freq (1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub(" En el transporte público", "En el transporte público",  respuestas ) #(1 pto)
respuestas <- gsub(" En otros lugares", "En otros lugares", respuestas )
# 03.7 vuelva a observar sus respuestas con freq (1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
pedro_villarroel<-  freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# 04. Ahora recodifique la variable re_02 (¿Cuál es su afiliación religiosa o creencia espiritual?)
# 04.1 observe las categorías de respuesta de esta variable (0.5 pto)
base <- base %>% dplyr::rename(Creencia_religiosa = re_02)
names(base)
str(base$Creencia_religiosa)
# 04.2 recodifique las categorías de esta variable en una nueva variable denominada "religion_rec" de la siguiente forma (3 ptos)
# Hint:  debe utilizar la función case_when()
table(base$Creencia_religiosa)
summarytools::ctable( x = base$re_02, y = base$ultimo_colegio)
base <- base %>%  mutate(religion_rec= case_when(religion_rec %in% c("No tengo una afiliación religiosa, pero si me considero una persona espiritual (por ejemplo, creo en las energías).","seria en creer en alguien superior un tipo de energía que se interpreta de diversas formas en la religión pero no es alguien al cual se le pueda poner un nombre", "deísmo") ~"Espiritualida_sin_afiliacion_religiosa",
religion_rec %in% c("Catolico","Cristianismo Protestante (Evangélico, anglicano, etcétera)","Grecorromana ","Yoruba ","Ortodoxo") ~"Religión_específica",
religion_rec %in% c("Pagana","Ateo","Agnóstico","No tengo afiliaciones religiosas y tampoco me adscribo a ningún tipo de corriente de pensamiento de tipo clasificatoria","Ninguno ") ~"Sin religión",
TRUE~religion_rec))
View(base)
base <- base %>%  mutate(Creencia_religiosa= case_when(Creencia_religiosa %in% c("No tengo una afiliación religiosa, pero si me considero una persona espiritual (por ejemplo, creo en las energías).","seria en creer en alguien superior un tipo de energía que se interpreta de diversas formas en la religión pero no es alguien al cual se le pueda poner un nombre", "deísmo") ~"Espiritualida_sin_afiliacion_religiosa",
Creencia_religiosa %in% c("Catolico","Cristianismo Protestante (Evangélico, anglicano, etcétera)","Grecorromana ","Yoruba ","Ortodoxo") ~"Religión_específica",
Creencia_religiosa %in% c("Pagana","Ateo","Agnóstico","No tengo afiliaciones religiosas y tampoco me adscribo a ningún tipo de corriente de pensamiento de tipo clasificatoria","Ninguno ") ~"Sin religión",
TRUE~Creencia_religiosa))
# 04. Ahora recodifique la variable re_02 (¿Cuál es su afiliación religiosa o creencia espiritual?)
# 04.1 observe las categorías de respuesta de esta variable (0.5 pto)
base <- base %>% dplyr::rename(religion_rec = re_02)
names(base)
# 04. Ahora recodifique la variable re_02 (¿Cuál es su afiliación religiosa o creencia espiritual?)
# 04.1 observe las categorías de respuesta de esta variable (0.5 pto)
base <- base %>% dplyr::rename(religion_rec = Creencia_religiosa)
names(base)
str(base$religion_rec)
base <- base %>%  mutate(religion_rec= case_when(religion_rec %in% c("No tengo una afiliación religiosa, pero si me considero una persona espiritual (por ejemplo, creo en las energías).","seria en creer en alguien superior un tipo de energía que se interpreta de diversas formas en la religión pero no es alguien al cual se le pueda poner un nombre", "deísmo") ~"Espiritualida_sin_afiliacion_religiosa",
religion_rec %in% c("Catolico","Cristianismo Protestante (Evangélico, anglicano, etcétera)","Grecorromana ","Yoruba ","Ortodoxo") ~"Religión_específica",
religion_rec %in% c("Pagana","Ateo","Agnóstico","No tengo afiliaciones religiosas y tampoco me adscribo a ningún tipo de corriente de pensamiento de tipo clasificatoria","Ninguno ") ~"Sin religión",
TRUE~religion_rec))
table(base$religion_rec)
base <- base %>% mutate(to_01=case_when(to_01 %in% c("Bastante tiempo.", "Suficiente tiempo.")~"Tiempo_disponible",
to_01 %in% c("No tengo tiempo.", "Poco tiempo.")~ "Tiempo_limitado",
TRUE~to_01))
# Media (0.5 ptos)
mean_ea_04 <- mean(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
# Mediana (0.5 ptos)
median_ea_04 <- median(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
# desviación estándar (0.5 ptos)
sd_ea_04 <- sd(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
# varianza (0.5 ptos)
var_ea_04 <- var(base$ea_04_notas_ultimo_semestre, na.rm = TRUE)
ggplot(base, aes(x=religion_rec, y=ea_04_notas_ultimo_semestre, fill=religion_rec)) +
geom_boxplot(alpha=0.3) +
labs(title = "Promedio de notas según tipo de religión",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Promedio de notas según tipo de religión",
fill = "Religion")+
theme(legend.position="none")
ggplot(base, aes(x=actividad_extracurriculares, y=ea_04_notas_ultimo_semestre, fill=actividad_extracurriculares)) +
geom_boxplot(alpha=0.3) +
labs(title = "Notas último semestre según tiempo",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Promedio de notas último semestre",
fill = "Tiempo")+
theme(legend.position="none")
ggplot(base, aes(x=to_01, y=ea_04_notas_ultimo_semestre, fill=to_01)) +
geom_boxplot(alpha=0.3) +
labs(title = "Notas último semestre según tiempo",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Promedio de notas último semestre",
fill = "Tiempo")+
theme(legend.position="none")
ggplot(pedro_villarroel, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Lugares donde escuchan música",
subtitle = "Estudiantes de antropología",
caption = "Fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
# 00. Carga de Paquetes --------------------------------------------------------
pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
viridis, #temas de gráficos
hrbrthemes)#temas de gráficos
# 01. Cargar datos--------------------------------------------------------
base <- read.xlsx("base_antropologia_limpia.xlsx")
# 01.1 ¿cuántas filas y columnas tienen los datos? (0.5 ptos)
#(debe escribir código que entregue la información, no se aceptan respuestas sin código)
nrow(base)
ncol(base)
#02. Renombrar variables
#02.01: observe las variables de la base de datos con names(0.5)
names(base)
base <- base %>% dplyr::rename(ocio_y_dias = to_02,
seleccion_actividad_ocio = to_04,
pertenencia_agrupación_ocio = to_05,
importancia_activ_ocio = to_06)
names(base)
base <- base %>% dplyr::rename(lugar_musica=cm_05)
# 03.2 observe las categorías de la variable lugar_musica, puede utilizar funciones como freq, table, unique, etc. (0.5 ptos)
unique(base$lugar_musica)
respuesta <- strsplit(base$lugar_musica, ",")
respuestas <- unlist(respuesta)
# 03.5 observe las respuestas con freq (1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub(" En el transporte público", "En el transporte público",  respuestas ) #(1 pto)
respuestas <- gsub(" En otros lugares", "En otros lugares", respuestas ) #(1 pto)
# 03.7 vuelva a observar sus respuestas con freq (1 pto)
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
pedro_villarroel<-  freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
