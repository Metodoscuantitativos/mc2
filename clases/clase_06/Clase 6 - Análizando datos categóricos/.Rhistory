tb() %>%
kable(col.names = c("Religion", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria")
datos %>%
mutate(religion = as.character(religion)) %>%
mutate(religion = if_else(religion %in% c("Sin respuesta", "No aplica"), as.character(NA), religion)) %>%
freq(religion, prop = TRUE, order = "freq", report.nas =  FALSE)  %>%
tb() %>%
kable(col.names = c("Religion", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2)
datos %>%
mutate(religion = as.character(religion)) %>%
mutate(religion = if_else(religion %in% c("Sin respuesta", "No aplica"), as.character(NA), religion)) %>%
freq(religion, prop = TRUE, order = "freq", report.nas =  FALSE)  %>%
tb() %>%
kable(col.names = c("Religion", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria")
datos %>%
mutate(religion = as.character(religion)) %>%
mutate(religion = if_else(religion %in% c("Sin respuesta", "No aplica"), as.character(NA), religion)) %>%
freq(religion, prop = TRUE, order = "freq", report.nas =  FALSE)  %>%
tb() %>%
kable(col.names = c("Religion", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria")
#Guardar en formato Kable
options(OutDec= ",") # me permite que los resultados estén con coma, en vez de punto
datos %>%
mutate(religion = as.character(religion)) %>%
mutate(religion = if_else(religion %in% c("Sin respuesta", "No aplica"), as.character(NA), religion)) %>%
freq(religion, prop = TRUE, order = "freq", report.nas =  FALSE)  %>%
tb() %>%
kable(col.names = c("Religion", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria")
#B.tidyverse
datos %>%
filter (!(religion =="Sin respuesta")) %>%
count(religion) %>% # contar las frecuencias de cada religión
mutate(Porcentaje = n / sum(n) * 100) %>% # genero un porcentaje
mutate(Porcentaje = round (Porcentaje, 2)) %>% #redondeo en dos decimales
arrange(desc(Porcentaje)) %>%  #ordeno de mayor a menor
rename(Frecuencia = n, Religion= religion) %>% #renombro dos categorías
bind_rows(list(Religion = "Total", Frecuencia = sum(.$Frecuencia), Porcentaje = 100)) %>%
kable(col.names = c("Religion", "Frecuencia", "Porcentaje"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria", font_size = 15)  #le doy formate con kable
#proporciones por columnas
c_religionxraza1 <-
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
View(c_religionxraza1)
#proporciones por columnas
c_religionxraza1 <-
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#para ver una opción
c_religionxraza1 %>%
kable(., caption="Tabla de contingencia para religión y raza") %>%
kable_classic(full_width = F, html_font = "Cambria", font_size = 15)
#proporciones por columnas
c_religionxraza1 <-
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#proporciones por columnas
c_religionxraza1 <-
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#proporciones por filas
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
prop.table(.,1) %>% #primero prop.table
addmargins(.,2) %>% #segundo addmargins
round(4)*100
#proporciones por columnas
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#para ver una opción
c_religionxraza1 %>%
kable(., caption="Tabla de contingencia para religión y raza") %>%
kable_classic(full_width = F, html_font = "Cambria", font_size = 15)
datos$raza <- datos$raza %>% fct_relevel(c("Blanca", "Negra", "Otra")) %>%
fct_drop("No aplica") #ordeno los resultados según raza y elimino la categoría no aplica
datos$religion <- datos$religion %>% fct_relevel(c("Protestante",
"Católica",
"Ninguna",
"Cristiana",
"Judía",
"Budismo",
"Inter o no confesional",
"Musulmana/Islam",
"Cristiana ortodoxa",
"Hinduismo",
"Otra religión oriental",
"Nativa americana",
"Otra",
"No sabe",
"No aplica",
"Sin respuesta"
)) %>%
fct_drop("No aplica")
ctable( x = datos$religion, y = datos$raza, prop = "c", justify = "l")
#proporciones por columnas
c_religionxraza1 <-
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
c_religionxraza1 <-
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#para ver una opción
c_religionxraza1 %>%
kable(., caption="Tabla de contingencia para religión y raza") %>%
kable_classic(full_width = F, html_font = "Cambria", font_size = 15)
#con tidyverse
datos %>%
filter(religion != "Sin respuesta") %>%
select(religion, raza) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#03.1: forto imagen
c_religionxraza1 %>%
kable(., caption="Tabla de contingencia para religión y raza") %>%
kable_classic(full_width = F, html_font = "Cambria", font_size = 15)
datos %>%
mutate(religion = as.character(religion)) %>%
mutate(religion = if_else(religion %in% c("Sin respuesta", "No aplica"), as.character(NA), religion)) %>%
freq(religion, prop = TRUE, order = "freq", report.nas =  FALSE)  %>%
tb() %>%
kable(col.names = c("Religion", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria")
#Veo tabla en Kable
#tabla de Kable
datos %>%
filter (!(religion =="Sin respuesta")) %>%
count(religion) %>% # contar las frecuencias de cada religión
mutate(Porcentaje = n / sum(n) * 100) %>% # genero un porcentaje
mutate(Porcentaje = round (Porcentaje, 2)) %>% #redondeo en dos decimales
arrange(desc(Porcentaje)) %>%  #ordeno de mayor a menor
rename(Frecuencia = n, Religion= religion) %>% #renombro dos categorías
bind_rows(list(Religion = "Total", Frecuencia = sum(.$Frecuencia), Porcentaje = 100)) %>%
kable(col.names = c("Religion", "Frecuencia", "Porcentaje"),
caption = "Distribución de frecuencias de Relgión",
format = "html", digits = 2) %>%  #le doy formate con kable
kable_classic(full_width = F, html_font = "Cambria", font_size = 15)
# geom_col()####
#gráfico de columnas
names(f_religion)
ggplot(data= f_religion, aes(x = Religion, y = Frecuencia)) +
geom_col()
ggplot(f_religion, aes(x = Religion, y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) #ajusto etiquetas
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia, desc), y = Frecuencia)) + #con desc
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Cambiar la orientación de los ejes: cambio el que estaba en x a y.
ggplot(f_religion, aes(x = Frecuencia, y = fct_reorder(Religion, Frecuencia))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs (title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
x = "%",
y = "Religiones",
caption = "fuente: Libreria Datos")
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs (title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
xlab("") + ylab("") # se fue lo que decía Religiones y el %
# Le pongo los porcentajes al final con geom_text()
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")
#le agrego color gris
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego un tema, hago que esté en negrita y xon nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()
#quiero cambiar los colores y sólo le pondré porcentajes a algunos
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje), fill = Religion)) +
geom_col() +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos") +
geom_text(aes(label = ifelse(Religion %in% c("Protestante", "Católica", "Ninguna", "Cristiana"), Porcentaje, "")),
hjust = 1, nudge_x = -.5, size = 4, fontface = "bold") +
theme_minimal()+
scale_fill_viridis_d(option = "C", guide = "none")
#le agrego un tema, hago que esté en negrita y xon nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()
#quiero cambiar los colores y sólo le pondré porcentajes a algunos
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje), fill = Religion)) +
geom_col() +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos") +
geom_text(aes(label = ifelse(Religion %in% c("Protestante", "Católica", "Ninguna", "Cristiana"), Porcentaje, "")),
hjust = 1, nudge_x = -.5, size = 4, fontface = "bold") +
theme_minimal()+
scale_fill_viridis_d(option = "C", guide = "none")
#1.2. geom_bar()####
#es una suerte de atajo, abrevia, no obliga a dar todos los detalles
#cuanta la frecuencia de una variable en particular directamente desde la base de datos
#no es necesario hacer una tabla con una variable y que indique la frecuencia
names(datos)
ggplot(datos, aes(x = religion)) +
geom_bar()
#pero es más complejo ordenar y transformar
ggplot(datos, aes(x = fct_reorder(religion, religion, function(x) sum(datos$religion == x)), y = ..count..)) +
geom_bar()
#gráfico de torta
f_religion$Religion <- factor(f_religion$Religion, levels = f_religion$Religion[order(f_religion$Porcentaje)])
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_discrete( guide = "legend", limits = f_religion$Religion)
datos$raza <- datos$raza %>% fct_relevel(c("Blanca", "Negra", "Otra")) %>%
fct_drop("No aplica") #ordeno los resultados según raza y elimino la categoría no aplica
datos$religion <- datos$religion %>% fct_relevel(c("Protestante",
"Católica",
"Ninguna",
"Cristiana",
"Judía",
"Budismo",
"Inter o no confesional",
"Musulmana/Islam",
"Cristiana ortodoxa",
"Hinduismo",
"Otra religión oriental",
"Nativa americana",
"Otra",
"No sabe",
"No aplica",
"Sin respuesta"
)) %>%
fct_drop("No aplica")
#Forma 1: Integrar las proporciones al gráfico de barras
ggplot(data = datos, aes(x = raza, fill = religion)) +
geom_bar(position = "fill") + ylab("Proporciones")+
theme_classic()
#Forma 1.1.: elegir colores en específico
# Vector de colores contrastantes
colors <- c("#440154", "#b2df8a", "#365A8C", "#277E8E", "#1FA088", "#44A96C", "#7FBC41",
"#B3CC2A", "#FDE725", "#46337E", "#b07aa1", "#ff9da7", "#9c755f",
"#bab0ac", "#5c5c5c")
ggplot(data = datos, aes(x = raza, fill = religion)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors) #poner los colores manualmente
datos %>%
mutate(partido = as.character(partido)) %>%
mutate(partido = if_else(partido %in% c("Sin respuesta", "No aplica"), as.character(NA), partido)) %>%
freq(partido, prop = TRUE, order = "freq", report.nas =  FALSE)
datos <- datos %>%
mutate(partido_r = case_when(partido ==  "No fuertemente demócrata" ~ "Demócrata",
partido ==  "Fuertemente demócrata" ~ "Demócrata",
partido ==  "Ind, pro dem" ~ "Demócrata",
partido ==  "Fuertemente republicano" ~ "Republicano",
partido ==  "No fuertemente republicano" ~ "Republicano",
partido ==  "Ind, pro rep" ~ "Republicano",
partido ==  "Otro partido" ~ "Otro partido",
partido ==  "Independiente" ~ "Independiente",
partido ==  "No sabe" ~ "No sabe"))
datos$partido_r <- as.factor(datos$partido_r) #por qué se transforma a factor?
class(datos$partido_r)
datos$partido_r <- datos$partido_r %>% fct_relevel(c("Demócrata", "Republicano",
"Independiente", "Otro partido", "No sabe"))
ggplot(data = datos, aes(x = raza, fill = partido_r)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
ggplot(data = datos, aes(x = raza, fill = partido_r)) +
geom_bar(position = "fill") +
ylab("Orientación Política") +
theme_classic() +
scale_fill_manual(values = colors) +
labs(fill = "Orientación Política")
#¿Qué hacer con NA?
#para eliminar datos NA
ggplot(data = na.omit(datos), aes(x = raza, fill = partido_r)) + #esto elimina datos perdidos
geom_bar(position = "fill") +
ylab("Orientación Política") +
theme_classic() +
scale_fill_manual(values = colors) +
labs(fill = "Orientación Política")
#Forma dos: facet_wrap
ggplot(data = na.omit(datos), aes(x = partido_r)) +
geom_bar() +
ylab("Frecuencias") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = na.omit(datos), aes(x = partido_r, fill=partido_r)) +
geom_bar() +
ylab("Frecuencias") +
xlab("Orientación Política") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "Orientación Política")
#práctica
#01. recodifique con mutate en tres grupos de edad: 18 a 35, 36 a 64 y 65 y más (clase 5)
datos <- datos %>%
mutate (edad_r= case_when (edad %in% c(18:35) ~ "18 a 35",
edad %in% c(36:64) ~ "36 a 64",
edad >= 65 ~ "65 o más"))
#02. realice una distribución de frecuencias con freq (clase 6)
datos %>%
mutate(edad_r = as.character(edad_r)) %>% #transformo a character
mutate(edad_r = if_else(edad_r %in% c("Sin respuesta", "No aplica"), as.character(NA), edad_r)) %>%
freq(edad_r, prop = TRUE, report.nas =  FALSE)
#03. realice una tabla de contingencia con porcentaje en columnas edadr y partido_r  (clase 6)
# ¿Cuál sería su variable independiente y su variable dependiente?
datos %>%
filter(partido_r != "Sin respuesta") %>%
select(partido_r, edad_r) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#04. realice una gráfico de barra par la variable edad_r
ggplot(data = na.omit(datos), aes(x = edadr, fill= edadr)) +
geom_bar() +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#03. realice una tabla de contingencia con porcentaje en columnas edadr y partido_r  (clase 6)
# ¿Cuál sería su variable independiente y su variable dependiente?
datos %>%
filter(partido_r != "Sin respuesta") %>%
select(partido_r, edad_r) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#04. realice una gráfico de barra par la variable edad_r
ggplot(data = na.omit(datos), aes(x = edadr, fill= edadr)) +
geom_bar() +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#práctica
#01. recodifique con mutate en tres grupos de edad: 18 a 35, 36 a 64 y 65 y más (clase 5)
datos <- datos %>%
mutate (edad_r= case_when (edad %in% c(18:35) ~ "18 a 35",
edad %in% c(36:64) ~ "36 a 64",
edad >= 65 ~ "65 o más"))
#02. realice una distribución de frecuencias con freq (clase 6)
datos %>%
mutate(edad_r = as.character(edad_r)) %>% #transformo a character
mutate(edad_r = if_else(edad_r %in% c("Sin respuesta", "No aplica"), as.character(NA), edad_r)) %>%
freq(edad_r, prop = TRUE, report.nas =  FALSE)
#03. realice una tabla de contingencia con porcentaje en columnas edadr y partido_r  (clase 6)
# ¿Cuál sería su variable independiente y su variable dependiente?
datos %>%
filter(partido_r != "Sin respuesta") %>%
select(partido_r, edad_r) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#04. realice una gráfico de barra par la variable edad_r
ggplot(data = na.omit(datos), aes(x = edadr, fill= edadr)) +
geom_bar() +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
ggplot(data = na.omit(datos), aes(x = edadr, fill = partido_r)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
xlab("Edad")+
theme_classic() +
scale_fill_manual(values = colors)
ggplot(data = na.omit(datos), aes(x = edad_r, fill = partido_r)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
xlab("Edad")+
theme_classic() +
scale_fill_manual(values = colors)
