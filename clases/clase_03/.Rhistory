base_covid <- readRDS(file = "base_covid_sample.RDS")
names (base_covid)
base_covid_r <- [, c(sexo, edad, fallecido)]
base_covid_r <- [ , c("sexo", "edad", "fallecido")]
base_covid_r <- base_covid [,c("sexo", "edad", "fallecido")]
base_covid_r1 <- base_covid [,c("sexo", "edad", "fallecido")]
base_covid_r2 <- base_covid [,c(2, 3, 15)]
View(base_covid_r2)
View(base_covid_r1)
base_covid_r3 <- base_covid_r1 [1:500, ]
#04. Cree un vector con todos los números enteros entre 18 y 60.
# Nómbrelo como vector_filtro
vector_filtro <- 18:60
# Ejecute la siguiente sentencia
# para comprobar qué valores del vector en cuestión están dentro del rango contemplado por vector_filtro
c(1,5,20,55,60,72) %in%  vector_filtro
#05. Ejecute una sentencia que compruebe para toda la columna edad de la base con 500 filas
# qué valores están dentro del rango contemplado por vector_filtro
base_covid_r3$edad %in%  vector_filtro
#01. Importar la base de datos de casos COVID (base_covid_sample.RDS) y cargar tidyverse
library(tidyverse)
base_covid <- readRDS(file = "base_covid_sample.RDS")
names(base_covid)
base_Covid %>%
select(edad, sexo, falledido)
base_Covid %>%
select(edad, sexo, fallecido)
base_Covid %>%
select("edad", "sexo", "fallecido")
base_covid %>%
select("edad", "sexo", "fallecido")
names(base_covid)
base_covid %>%
select("edad", 2,
starts_with(fecha),
ends_with(nombre),
contains(id))
base_covid %>%
select("edad", 2,
starts_with("fecha"),
ends_with("nombre"),
contains("id"))
base_covid2 <-base_covid %>%
select("edad", 2,
starts_with("fecha"),
ends_with("nombre"),
contains("id"))
#03. Crear un objeto nuevo que contenga unicamente a la población residente de 3 provincias a elección
#y sólo una categoría de la variable sexo [a elección]
#realicelo con filter, puede ver las categorias de provincias y sexo con unique()
names(base_covid)
unique(base_covid$residencia_provincia_nombre)
unique(base_covid$sexo)
base_covid %>%
filter (residencia_provincia_nombre == c("Buenos Aires", "Córdoba", "CABA"),
sexo == "M")
ase_covid3 <- base_covid %>%
filter (residencia_provincia_nombre == c("Buenos Aires", "Córdoba", "CABA"),
sexo == "M")
base_covid %>%
filter (residencia_provincia_nombre %in% c("Buenos Aires", "Córdoba", "CABA"),
sexo == "M")
base_covid3 <- base_covid %>%
filter (residencia_provincia_nombre %in% c("Buenos Aires", "Córdoba", "CABA"),
sexo == "M")
#04. mediante la función table () observe si su filtro está bien realizado para residencia_provincia_nombre
table(base_covid3$residencia_provincia_nombre)
#0.5 mediante la función table () observe si su filtro está bien realizado para sexo
table(base_covid3$sexo)
#06. Crear una variable recodificando (base_covid4) la variable edad en 3 rangos etáreos.
#recuerde que para recodificar se usa: mutate(variable_nueva = case_when(variable_vieja %in% c(desde:hasta) ~ "desde a hasta"
names (base_covid)
base_covid %>%
mutate (edad_r = case_when (edad %in% c(0:18 ~ "O a 18"),
(edad %in% c(19:64 ~ "19 a 64"),
base_covid %>%
mutate (edad_r = case_when (edad %in% c(0:18 ~ "O a 18"),
(edad %in% c(19:64 ~ "19 a 64"),
base_covid %>%
mutate(edadr = case_when(edad %in% c(0:18 ~ "O a 18"),
edad %in% c(19:64 ~ "19 a 64"),
edad >= 65))
base_covid4 <- base_covid %>%
mutate(edadr = case_when(edad %in% c(0:18 ~ "O a 18"),
edad %in% c(19:64 ~ "19 a 64"),
edad >= 65))
base_covid$edad
class(edad)
class(base_covid$edad)
base_covid4 <- base_covid %>%
mutate(edadr = case_when(edad %in% c (0:18) ~ "0 a 18",
edad %in% c (19:29) ~ "19 a 25",
edad %in% c (30:39) ~ "30 a 39",
edad %in% c (40:49) ~ "40 a 41",
edad >= 50  ~ "60 o más"))
base_covid %>%
mutate(edadr = case_when(edad %in% c (0:18 ~ "O a 18"),
edad %in% c (19:64 ~ "19 a 64"),
edad >= 65 ~ "65 o más" ))
base_covid4 <- base_covid %>%
mutate(edadr = case_when(edad %in% c (0:18 ~ "O a 18"),
edad %in% c (19:64 ~ "19 a 64"),
edad >= 65 ~ "65 o más"))
base_covid %>%
mutate(edadr = case_when(edad %in% c (0:18) ~ "O a 18",
edad %in% c (19:64) ~ "19 a 64",
edad >= 65 ~ "65 o más"))
base_covid4 <- base_covid %>%
mutate(edadr = case_when(edad %in% c (0:18) ~ "O a 18",
edad %in% c (19:64) ~ "19 a 64",
edad >= 65 ~ "65 o más"))
#07. compruebe lo realizado con una table(
table(base_covid4$edadr)
base_covid <- readRDS(file = "base_covid_sample.RDS")
base_covid <- readRDS(file = "base_covid_sample.RDS")
names (base_covid)
unique(base_covid$clasificacion)
unique(base_covid$clasificacion_resumen)
base_covid [, c("edad", "clasificacion_resumen", "fallecido")]
names(base_covid)
base_covid_r1 <- base_covid [, c("edad", "clasificacion_resumen", "fallecido")]
base_covid_r2 <- base_covid [, c(3, 21, 15)]
View(base_covid_r2)
View(base_covid_r1)
base_covid_r3 <- base_covid_r1 [0:200,]
#04. Cree un vector con todos los números enteros entre 65 y 99.
# Nómbrelo como vector_filtro
vector_filtro <- 65:99
library(rvest)
library(janitor)
library(tidyverse)
library(lubridate)
install.packages ("robottxt")
install.packages ("robotstxt")
library(robotstxt)
robotstxt::paths_allowed("https://www.camara.cl/transparencia/listadodeaudiencias.aspx")
audiencia_diputados <- rvest::read_html("https://www.camara.cl/transparencia/listadodeaudiencias.aspx")
View(audiencia_diputados)
audiencia_diputados
audiencia_diputados <- audiencia_diputados %>%
rvest::html_nodes (".table-responsive") %>%
rvest:html_table (trim = TRUE) # sólo texto
audiencia_diputados %>%
rvest::html_nodes(".table-responsive") %>%
rvest::html_table(trim = TRUE)
audiencia_diputados <- audiencia_diputados %>%
rvest::html_nodes(".table-responsive") %>%
rvest::html_table(trim = TRUE)
audiencia_diputados <- dplyr::tibble(audiencia_diputados [[1]]) %>%
janitor::clean_names()
dplyr::glimpse(audiencia_diputados)
audiencia_diputados %>%
tidyr::separate(col=fecha, into = ("dia", "mes", "anio"), sep= "")
View(audiencia_diputados)
audiencia_diputados %>%
tidyr::separate(col=fecha, into = ("dia", "mes", "anio"), sep= " ")
audiencia_diputados %>%
tidyr::separate(col = fecha, into = c("dia", "mes", "anio"), sep = " ")
audiencia_diputados %>%
tidyr::separate(col = fecha, into = c("dia", "mes", "anio"), sep = " ") %>%
dplyr::mutate(mes = case_when(stringr::str_detect(mes, "ene.") ~ "01",
stringr::str_detect(mes, "feb.") ~ "02",
stringr::str_detect(mes, "mar.") ~ "03",
stringr::str_detect(mes, "abr.") ~ "04",
stringr::str_detect(mes, "may.") ~ "05",
stringr::str_detect(mes, "jun.") ~ "06",
stringr::str_detect(mes, "jul.") ~ "07",
stringr::str_detect(mes, "ago.") ~ "08",
stringr::str_detect(mes, "sep.") ~ "09",
stringr::str_detect(mes, "oct.") ~ "10",
stringr::str_detect(mes, "nov.") ~ "11",
stringr::str_detect(mes, "dic.") ~ "12"))
tidyr::separate(col = fecha, into = c("dia", "mes", "anio"), sep = " ") %>%
dplyr::mutate(mes = case_when(stringr::str_detect(mes, "ene.") ~ "01",
stringr::str_detect(mes, "feb.") ~ "02",
stringr::str_detect(mes, "mar.") ~ "03",
stringr::str_detect(mes, "abr.") ~ "04",
stringr::str_detect(mes, "may.") ~ "05",
stringr::str_detect(mes, "jun.") ~ "06",
stringr::str_detect(mes, "jul.") ~ "07",
stringr::str_detect(mes, "ago.") ~ "08",
stringr::str_detect(mes, "sep.") ~ "09",
stringr::str_detect(mes, "oct.") ~ "10",
stringr::str_detect(mes, "nov.") ~ "11",
stringr::str_detect(mes, "dic.") ~ "12")) %>%
tidyr::unite(col = fecha, c("dia", "mes", "anio"), sep = "-") %>%
dplyr::mutate(fecha = lubridate::dmy (fecha)) %>%
dplyr::mutate_all(stringr::str_to_upper)
audiencia_diputados %>%
tidyr::separate(col = fecha, into = c("dia", "mes", "anio"), sep = " ") %>%
dplyr::mutate(mes = case_when(stringr::str_detect(mes, "ene.") ~ "01",
stringr::str_detect(mes, "feb.") ~ "02",
stringr::str_detect(mes, "mar.") ~ "03",
stringr::str_detect(mes, "abr.") ~ "04",
stringr::str_detect(mes, "may.") ~ "05",
stringr::str_detect(mes, "jun.") ~ "06",
stringr::str_detect(mes, "jul.") ~ "07",
stringr::str_detect(mes, "ago.") ~ "08",
stringr::str_detect(mes, "sep.") ~ "09",
stringr::str_detect(mes, "oct.") ~ "10",
stringr::str_detect(mes, "nov.") ~ "11",
stringr::str_detect(mes, "dic.") ~ "12")) %>%
tidyr::unite(col = fecha, c("dia", "mes", "anio"), sep = "-") %>%
dplyr::mutate(fecha = lubridate::dmy(fecha)) %>%
# dplyr::mutate(across(where(is.character), stringr::str_to_upper))
dplyr::mutate_all(stringr::str_to_upper)
audiencia_diputados <- audiencia_diputados %>%
tidyr::separate(col = fecha, into = c("dia", "mes", "anio"), sep = " ") %>%
dplyr::mutate(mes = case_when(stringr::str_detect(mes, "ene.") ~ "01",
stringr::str_detect(mes, "feb.") ~ "02",
stringr::str_detect(mes, "mar.") ~ "03",
stringr::str_detect(mes, "abr.") ~ "04",
stringr::str_detect(mes, "may.") ~ "05",
stringr::str_detect(mes, "jun.") ~ "06",
stringr::str_detect(mes, "jul.") ~ "07",
stringr::str_detect(mes, "ago.") ~ "08",
stringr::str_detect(mes, "sep.") ~ "09",
stringr::str_detect(mes, "oct.") ~ "10",
stringr::str_detect(mes, "nov.") ~ "11",
stringr::str_detect(mes, "dic.") ~ "12")) %>%
tidyr::unite(col = fecha, c("dia", "mes", "anio"), sep = "-") %>%
dplyr::mutate(fecha = lubridate::dmy(fecha)) %>%
# dplyr::mutate(across(where(is.character), stringr::str_to_upper))
dplyr::mutate_all(stringr::str_to_upper) %>%
dplyr::mutate(lobbista_representado = stringr::str_replace_all(lobbista_representado,
pattern = "[:blank:]+",
replacement = " "),
lugar = stringr::str_replace_all(lugar,
pattern = "[:blank:]+",
replacement = " "),
materia = stringr::str_replace_all(materia,
pattern = "[:blank:]+",
replacement = " "))
