base_covid <- readRDS(file = "fuente/base_covid_sample.RDS")
#02. Supongan que sólo les interesa trabajar con las variables edad, clasificacion_resumen y  fallecido.
# para saber los nombres utilice función names ()
# Utilice el método de acceso de los corchetes [] para crear un nuevo objeto que contenga:
# a) todas las filas de la base,
# b) pero solo esas columnas
#02.1 realicelo con el nombre de las variables (base_covid_r1)
#02.2 realicelo con la posición de las variables (base_covid_r2)
#02.3 observe si son iguales
names(base_covid)
base_covid_r1 <- base_covid [, c("edad", "clasificacion_resumen", "fallecido")]
base_covid_r2 <- base_covid [, c(3, 21, 15)]
View(base_covid_r2)
View(base_covid_r1)
base_covid_r3 <- base_covid [1:200,]
#06. Borre todos los objetos del Environment
rm(ls)
#06. Borre todos los objetos del Environment
rm(ls())
#06. Borre todos los objetos del Environment
rm(list=ls())
base_covid <- readRDS(file = "fuente/base_covid_sample.RDS")
#01. Importar la base de datos de casos COVID (base_covid_sample.RDS) y cargar tidyverse
#asignela con el nombre base_covid
library(tidyverse)
names(base_covid)
base_covid %>%
dplyr::select(sexo, 3, starts_with(match = "fecha"), ends_with(match = "id"), contains(match = nombre))
base_covid %>%
dplyr::select(sexo, 3, starts_with(match = "fecha"), ends_with(match = "id"), contains(match = "nombre"))
base_covid2 <- base_covid %>%
dplyr::select(sexo, 3, starts_with(match = "fecha"), ends_with(match = "id"), contains(match = "nombre"))
names(base_covid)
unique(base_covid$residencia_provincia_nombre)
base_covid3 <- base_covid %>%
filter(residencia_provincia_nombre %in% c("CABA", "Mendoza", "Córdoba"),
edad >= 18)
#04. mediante la función table () observe si su filtro está bien realizado para residencia_provincia_nombre
table(base_covid_r3$residencia_provincia_nombre)
table(base_covid3$residencia_provincia_nombre)
#0.5 mediante la función table () observe si su filtro está bien realizado para edad
table(base_covid3$edad)
base_covid %>%
mutate (edadr = case_when(edad <18 ~ "1 a 17",
edad %in% c(18:34) ~ "18 a 34",
edad %in% c(35:64)~ "35 a 64",
edad >64 ~ "65 o más"))
base_covid4 <- base_covid %>%
mutate (edadr = case_when(edad <18 ~ "1 a 17",
edad %in% c(18:34) ~ "18 a 34",
edad %in% c(35:64)~ "35 a 64",
edad >64 ~ "65 o más"))
View(base_covid4)
#07. compruebe lo realizado con una table() a edadr
table(base_covid4$edadr)
pregrado <- c(140, 70, 20, 120, 240)
postgrado <- c(24, 50, 12, 40, 80)
pregrado
postgrado
anios <- c("2017", "2018", "2019", "2020", "2021")
anios
names(pregrado) <- anios
names(postgrado) <- anios
pregrado
postgrado
pregrado > postgrado
pregrado == postgrado
sum(pregrado)
sum(postgrado)
Candidato <- c("Kast", "Boric")
Votos <- c("64000", "78000")
Mesas <- c("Mesa1", "Mesa1")
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
Conteo <- opcion_2
kableExtra::kable(Conteo)
library(kable)
kableExtra::kable(Conteo)
kableExtra::kable(Conteo)
Conteo
kableExtra::kable(Conteo)
install.packages("kable")
library(kable)
library(kable)
install.packages("kable")
library(kable)
library(kableExtra)
kableExtra::kable(Conteo)
library(kableExtra)
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
kableExtra::kable(Conteo)
kableExtra::kable(Conteo)
kableExtra::kable(Conteo)
View(Conteo)
Conteo[1, c("Candidato", "Votos", "Mesas")]
a <- c(1:10)
b <- c(1, 5, 200, 500)
c <-  c(1.5, 2.5, 4, 5.6)
as.double(c)
c <- as.double(c)
c <- as.double(c)
c <-  c(1.5, 2.5, 5.6)
names(b) <- c("primero", "segundo", "tercero", "cuarto")
a <- c(1:10)
b <- c(1, 5, 200, 500)
c <- c(30, 35, 26, 47)
names(b) <- c("antropologia", "sociologia", "geografía", "historia")
#2. Tipo character
nombres <- c ("pedro", "juan", "diego")
#3. Factor
factor = factor(c("orange", "red", "yellow"))
#3. Factor
factor <-  factor(c("orange", "red", "yellow"))
#4. Lógico
lógico = c(FALSE, FALSE, TRUE, TRUE)
#Coerción explícita
x <- as.numeric(2,4,6,8,10)
#Coerción explícita
x <- as.numeric(2,4,6,8,10)
y <- as.factor(c("ABC1", "C2", "C3", "D", "E"))
#Coerción explícita
x <- as.numeric(c(2,4,6,8,10))
y <- as.factor(c("ABC1", "C2", "C3", "D", "E"))
z <- as.logical(c(TRUE, TRUE, FALSE))
t <- as.Date("22-10-2020")
q <- as.character(c("Valparaíso", "Santiago", "Viña del Mar"))
class(t)
#class(): identificar el tipo de objeto
class(t)
as.character(x)
x <- as.character(x)
Candidato <- c("Kast", "Boric")
Votos <- c("64000", "78000")
Mesas <- c("Mesa1", "Mesa1")
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
as.tibble(opcion_2)
library(tidtverse)
library(tidyverse)
as_tibble(opcion_2)
kableExtra::kable(opcion_2)
library(kableExtra)
kableExtra::kable(opcion_2)
class(opcion_2)
as_tibble(opcion_2)
pcion_2
opcion_2
as.tbl(opcion_2)
tibble::as_tibble(opcion_2)
class(opcion_2)
tibble::as.tibble(opcion_2)
class(opcion_2)
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
class(opcion_2)
#lista
mi.lista <- list("letras" = letters[1:4], opcion_2 = opcion_2)
View(mi.lista)
#lista
mi.lista <- list("letras" <-  letters[1:4], opcion_2 <-  opcion_2, numeros <- c(1,2,3))
View(mi.lista)
View(mi.lista)
#acceso
mi.lista [[1]]
mi.lista [[3]]
mi.lista [[2]]
class(mi.lista [[2]])
class(mi.lista [[3]])
class(mi.lista [[1]])
mi.lista[["letras"]]
mi.lista[["letra"]]
mi.lista[["letras"]]
mi.lista[[letras]]
mi.lista[["letras"]]
mi.lista$letras
View(mi.lista)
# lista:
# objeto que puede almacenar muchos tipos de datos
mi.lista <- list("letras" =  letters[1:4], opcion_2 =  opcion_2, numeros = c(1,2,3))
View(mi.lista)
mi.lista_mal <- list("letras" <-   letters[1:4], opcion_2 <-  opcion_2, numeros <- c(1,2,3))
View(mi.lista_mal)
View(mi.lista)
View(mi.lista_mal)
mi.lista$letras
mi.lista[["letras"]]
mi.lista[["opcion_2"]]
#3. Factor: se suele usa para variables categóricas
factor <-  factor(c("orange", "red", "yellow"))
factor
genero <- c(1,2,2,2,1,2,1,99,99)
genero_f <- factor(genero, labels = c("Hombre", "Mujer", NA)) #Importancia del error (cantidad valores)
table(genero_f)
#tidyverse
Conteo %>%
select(2)
Candidato <- c("Kast", "Boric")
Votos <- c("64000", "78000")
Mesas <- c("Mesa1", "Mesa1")
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
Conteo <- opcion_2
#tidyverse
Conteo %>%
select(2)
Conteo %>%
select(Votos)
Conteo %>%
slice(1) %>%
select(2,3)
#2. Seleccionar la fila 1 y columna 1 y 2.
Conteo[1, c(1,2)]
Conteo %>%
slice(1) %>%
select(1,2)
xaringan:::inf_mr()
# Clase 5 - Data Wrangling 2
# 03. Procesamiento de base de datos --------------------------------------
# install.packages("pacman")
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
#Importar el archivo y asignarlo en el environment----
base_antropologia <- read.xlsx(" Encuesta-Estudiantes-Antropología-(respuestas).xlsx")
# install.packages("pacman")
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
#Importar el archivo y asignarlo en el environment----
base_antropologia <- read.xlsx("Encuesta-Estudiantes-Antropología-(respuestas).xlsx")
# 03. Procesamiento de base de datos --------------------------------------
# install.packages("pacman")
pacman::p_load(tidyverse,# Universo de paquetes : tidyr, dplyr, ggplot2,readr,purrr,tibble, stringr, forcats
openxlsx,#leer archivos xlsx
readxl,# leer archivos xl      #dos formatos de excel xlsx y xl
janitor,#limpieza de datos
writexl,#Guardar tablas formato excel
DataExplorer) #Exploración rápida
#Importar el archivo y asignarlo en el environment----
base_antropologia <- read.xlsx("Encuesta-Estudiantes-Antropología-(respuestas).xlsx")
#Explorar
glimpse(base_antropologia) #Una primera mirada de lo que hay en mis datos, la primera fila es extraña, dice "respuesta" o repite el nombre de la variable.
#quitar la primera fila a mis datos
names(base_antropologia) #observo que hay puntos, mayúsculas y minúsculas, etcétera. Está sucia
#limpieza inicial----
base_antropologia <- janitor::clean_names(base_antropologia) #con esto transformo todo a minúscula, quito tildes, saco signos, borro espacios
names(base_antropologia)# Queda mucho mejor
#observación de base
nrow(base_antropologia) #15 cantidad de casos
ncol(base_antropologia) #33 cantidad de variables
sapply(base_antropologia, FUN = class) # sapply: realiza un a función a varias variables
str(base_antropologia) #estructura del objeto base de datos
# Renombrar variables -----------------------------------------------------
#extraigo el nombre de todas las variables
names (base_antropologia)
# [1] "marca_temporal"
# [2] "p01_nombre_del_entrevistado_a"
# [3] "p02_edad_del_a_entrevistado"
# [4] "p03_genero_del_a_entrevistado_a"
# [5] "p04_ano_en_que_se_encuentra_de_la_carrera_1_2_3_4_5"
# [6] "p05_comuna_actual_de_residencia"
# [7] "p06_comuna_de_residencia_de_su_familia_nuclear_padres_hermanos_as_u_otros_as_cuidadores_o_en_la_que_vivio_la_mayor_parte_de_infancia_y_adolescencia"
# [8] "p07_ultimo_tipo_de_establecimiento_educativo_en_que_realizo_su_ensenanza_media"
# [9] "p08_puntaje_final_obtenido_en_la_prueba_de_seleccion_universitaria_poderado_segun_carrera_elegida"
# [10] "p09_cual_de_estas_situaciones_describe_mejor_su_actividad_principal_durante_el_ultimo_mes"
# [11] "p10_indique_el_maximo_nivel_educativo_obtenido_por_su_madre"
# [12] "p11_actualmente_su_madre_trabaja"
# [13] "p12_cual_es_la_ocupacion_u_oficio_actual_de_su_madre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre"
# [14] "p13_indique_el_maximo_nivel_educativo_obtenido_por_su_padre"
# [15] "p14_actualmente_su_padre_trabaja"
# [16] "p15_cual_es_la_ocupacion_u_oficio_actual_de_su_padre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_padre"
# [17] "p17_quien_es_el_principal_sostenedor_a_de_su_hogar_actual_quien_aporta_mas_ingresos"
# [18] "p18_en_la_sociedad_comunmente_existen_distintos_grupos_o_clases_sociales_las_personas_de_clase_social_alta_son_las_que_tienen_los_ingresos_mas_altos_el_mayor_nivel_de_educacion_y_los_trabajos_mas_valorados_las_personas_de_clase_social_baja_son_las_que_tienen_los_ingresos_mas_bajos_el_menor_nivel_de_educacion_y_los_trabajos_menos_valorados_entre_estas_clases_existen_otras_intermedias_segun_su_opinion_a_cual_de_los_siguientes_grupos_o_clases_sociales_pertenece_usted"
# [19] "p19_podria_decirme_si_su_casa_tiene_computador_ya_sea_notebook_o_de_escritorio_actualmente"
# [20] "p20_podria_decirme_si_usted_tiene_computador_para_uso_personal_ya_sea_notebook_o_de_escritorio_actualmente"
# [21] "p21_podria_decirme_si_usted_tiene_smartphone_personal_actualmente"
# [22] "p22_con_que_frecuencia_escucha_musica"
# [23] "p23_que_tipo_de_musica_es_la_que_mas_prefiere_escuchar_aun_cuando_escuche_mas_de_un_estilo_elija_el_que_mas_escuche"
# [24] "p24_si_eligio_otra_cual"
# [25] "p25_cual_es_la_segunda_musica_que_mas_prefiere_escuchar"
# [26] "p26_si_eligio_otra_cual"
# [27] "p27_con_que_dispositivo_suele_escuchar_mas_musica"
# [28] "p28_cual_es_principal_sitio_programa_o_aplicacion_para_bajar_o_escuchar_musica"
# [29] "p29_si_respondio_otro_cual"
# [30] "p30_cual_es_la_red_social_pasa_mas_tiempo"
# [31] "p31_si_respondio_otra_cual"
# [32] "p32_y_cual_es_la_segunda_red_social_pasa_mas_tiempo"
# [33] "p33_si_respondio_otra_cual"
# genero un vector con todos los nombres de las columnas que quiero renombrar
nombres <- c("marca_temporal", "p01_nombre_del_entrevistado_a", "p02_edad_del_a_entrevistado", "p03_genero_del_a_entrevistado_a", "p04_ano_en_que_se_encuentra_de_la_carrera_1_2_3_4_5", "p05_comuna_actual_de_residencia", "p06_comuna_de_residencia_de_su_familia_nuclear_padres_hermanos_as_u_otros_as_cuidadores_o_en_la_que_vivio_la_mayor_parte_de_infancia_y_adolescencia", "p07_ultimo_tipo_de_establecimiento_educativo_en_que_realizo_su_ensenanza_media", "p08_puntaje_final_obtenido_en_la_prueba_de_seleccion_universitaria_poderado_segun_carrera_elegida", "p09_cual_de_estas_situaciones_describe_mejor_su_actividad_principal_durante_el_ultimo_mes", "p10_indique_el_maximo_nivel_educativo_obtenido_por_su_madre", "p11_actualmente_su_madre_trabaja", "p12_cual_es_la_ocupacion_u_oficio_actual_de_su_madre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre", "p13_indique_el_maximo_nivel_educativo_obtenido_por_su_padre", "p14_actualmente_su_padre_trabaja", "p15_cual_es_la_ocupacion_u_oficio_actual_de_su_padre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_padre", "p17_quien_es_el_principal_sostenedor_a_de_su_hogar_actual_quien_aporta_mas_ingresos", "p18_en_la_sociedad_comunmente_existen_distintos_grupos_o_clases_sociales_las_personas_de_clase_social_alta_son_las_que_tienen_los_ingresos_mas_altos_el_mayor_nivel_de_educacion_y_los_trabajos_mas_valorados_las_personas_de_clase_social_baja_son_las_que_tienen_los_ingresos_mas_bajos_el_menor_nivel_de_educacion_y_los_trabajos_menos_valorados_entre_estas_clases_existen_otras_intermedias_segun_su_opinion_a_cual_de_los_siguientes_grupos_o_clases_sociales_pertenece_usted", "p19_podria_decirme_si_su_casa_tiene_computador_ya_sea_notebook_o_de_escritorio_actualmente", "p20_podria_decirme_si_usted_tiene_computador_para_uso_personal_ya_sea_notebook_o_de_escritorio_actualmente", "p21_podria_decirme_si_usted_tiene_smartphone_personal_actualmente", "p22_con_que_frecuencia_escucha_musica", "p23_que_tipo_de_musica_es_la_que_mas_prefiere_escuchar_aun_cuando_escuche_mas_de_un_estilo_elija_el_que_mas_escuche", "p24_si_eligio_otra_cual", "p25_cual_es_la_segunda_musica_que_mas_prefiere_escuchar", "p26_si_eligio_otra_cual", "p27_con_que_dispositivo_suele_escuchar_mas_musica", "p28_cual_es_principal_sitio_programa_o_aplicacion_para_bajar_o_escuchar_musica", "p29_si_respondio_otro_cual", "p30_cual_es_la_red_social_pasa_mas_tiempo", "p31_si_respondio_otra_cual", "p32_y_cual_es_la_segunda_red_social_pasa_mas_tiempo", "p33_si_respondio_otra_cual")
#genero un vector sólo con las 4 primeras letras:
nuevos_nombres <- str_sub(string = nombres, start = 1, end = 4 ) #muestro los argumentos
nuevos_nombres <- str_sub( nombres,  1, 4 )
#primer argumento - string = de donde saco los nombres: el vector creado
#segundo argumento - start = desde que posición extraigo (p)
#tercer argumento - end= hasta donde (1)
#renombro considerando todas las columnas elegidas asignando nuevos nombres
base_antropologia <- base_antropologia %>%
rename_at(vars(nombres), ~ nuevos_nombres) #recodificación múltiples con un vector
# Transformaciones/limpieza en variables categóricas---
names(base_antropologia)
#Situación Ocupacional de la madre :
#- ocupacion_madre
unique(base_antropologia$ocupacion_madre)
#realizaremos un conjunto de transformaciones/limpiezas de nuestra BBDD.
# para ocupación de la madre (respuesta abierta)
base_antropologia$ocupacion_madre <- tolower(base_antropologia$ocupacion_madre) #todas a minusculas
unique(base_antropologia$ocupacion_madre)
# para ocupación de la madre (respuesta abierta)
base_antropologia$ocupacion_madre <- tolower(base_antropologia$ocupacion_madre) #todas a minusculas
