
# Prueba --------------------------------------------------------

##00. Lectura de paquetes a utilizar 

# cargue los siguientes paquetes con pacman:
## tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer
## knitr, gt, summarytools, ggthemes, hrbrthemes, stringr, tidyselect, kableExtra

pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
         knitr, gt, summarytools, ggthemes, hrbrthemes, stringr, tidyselect, kableExtra)

#01.Inicio del trabajo
#01.01 Apertura de base

# Cargue la base: EncuestaAntropologia_2023.xlsx y asignela al enviroment como bbdd

bbdd <- read.xlsx(xlsxFile = "base/EncuestaAntropologia_2023.xlsx")

# Cargue el libro de códigos: Encuesta antropología 2023.csv y asignelo como lcod

lcod <- read.csv(file = "base/Encuesta antropología 2023.csv")

#01.02 Realice una primera mirada de la base con glimpse

glimpse(bbdd)

#Conteste: ¿Cuántos casos hay en la base? ¿Cuántas variables?

#En la base hay 103 casos y 76 variables.

#02. Renombrar variables
#02.01: observe las variables de la base de datos y del libro de códigos con names

names(bbdd)

#02.02: renombre 4 variables pertenecientes al grupo del cual usted participa

bbdd <- bbdd %>% dplyr::rename(fruta = hs01,
                               verduras = hs02,
                               proteina_animal = hs03,
                               proteina_no_animal = hs04)
names(bbdd) #comprobación

#03. Limpieza de valores/categorías
#03.01 Observe la base de datos con DataExplorer::create_report(base) 

#DataExplorer::create_report(bbdd)

#señale 2 variables que habría realizar una transformación de las categorías de las variables. 

#Dos variables en las cuales habría que realizar una transformación en sus categorías sería ciudad_actual y comuna_actual.




#03.02 Limpieza inicial
#Luego de observar las siguiente frecuencia:
freq(bbdd$le10, prop = TRUE, order = "freq", report.nas =  FALSE)
unique(bbdd$le10)

#agrupe las siguientes categorías mediante ifelse: 

# a) genere la categoría "Indefinido" y coloque allí: "donde sea", "Todos los anteriores ", "Todos", "Todas las anteriores ".

bbdd <- bbdd %>%
  mutate(le10 = ifelse(le10 %in% c("donde sea", "Todos los anteriores ", "Todos", "Todas las anteriores "),
                       yes = "Indefinido", no = le10)) 

# b) genere la categoría "Otros lugares de la casa" coloque: "Donde pueda encontrar espacio en mi casa".

bbdd <- bbdd %>%
  mutate(le10 = ifelse(le10 == ("Donde pueda encontrar espacio en mi casa"),
                       yes = "Otros lugares de la casa", no = le10))

# c) observe la transformación realizada mediante la aplicación de una frecuencia (freq) y unique ()

freq(bbdd$le10, prop = TRUE, order = "freq", report.nas =  FALSE)
unique(bbdd$le10)

#04. Limpieza de respuestas múltiples
#Limpie le12: por qué dispositivos lee a través de medios digitales
#04.1.observe la variable con unique

unique(bbdd$le12)

#04.2.realice un vector respuesta con strsplit y realice la separación considerando las distintas respuestas se separan con punto y coma (;)

respuestas <- strsplit(bbdd$le12, ";")

#04.3.realice unlist de ese vector

respuestas <- unlist(respuestas)

unique(respuestas) #para corroborar

#04.4.realice una tabla de frecuencias de las respuestas

freq(respuestas, prop = TRUE, order = "freq", report.nas =  FALSE) %>%
tb()

##05. Recodificaciones
#05.01: recodifique avr_notas: 
# estudiantes con notas mayor o igual a 6
# estudiantes menor o igual a 5,9

unique(bbdd$avr_notas)

bbdd <- bbdd %>% 
  mutate(avr_notasr = ifelse(c("Entre 4.6 y 4.9", "Entre 5 y 5.5", "Entre 5.6 y 5.9") ~ "menor o igual a 5,9", 
                             c("Entre 6 y 6.5", "Entre 6.6 y 7") ~ "mayor o igual a 6"))
         
                            
#05.02: compruebe lo realizado con freq

## 06. Análisis univariado de variables cualitativas 
# 06.0: utilice la siguiente línea de código para que en sus tablas los decimales aparezcan con coma: options(OutDec= ",") 
# 06.1.Realice 3 distribuciones de frecuencias que utilizará con su grupo, eliminando las categorías que no son necesarias

freq(bbdd$fruta, prop = TRUE, report.nas =  FALSE) %>%
  tb()

freq(bbdd$proteina_animal, prop = TRUE, report.nas =  FALSE) %>%
  tb()

freq(bbdd$proteina_no_animal, prop = TRUE, report.nas =  FALSE) %>%
  tb()

# 06.2 Formatee 1 tabla con kable

bbdd %>% 
  freq(fruta, prop = TRUE, report.nas = FALSE) %>%
  tb() %>% 
  kable(col.names = c ("Consumo de fruta al día", "Frecuencia", "%", "% Acumulado"),
        caption = "Consumo de fruta de los estudiantes de Antropologia UAH",
        digits = c(0,0,2,2)) %>%
  kable_classic(full_width = F, html_font = "Cambria")

# 06.3 Guarde la tabla en formato png 

webshot::install_phantomjs()

if(!dir.exists("tablas")) dir.create("tablas")

bbdd %>% 
  freq(fruta, prop = TRUE, report.nas = FALSE) %>%
  tb() %>% 
  kable(col.names = c ("Consumo de fruta al día", "Frecuencia", "%", "% Acumulado"),
        caption = "Consumo de fruta de los estudiantes de Antropologia UAH",
        digits = c(0,0,2,2)) %>%
  kable_classic(full_width = F, html_font = "Cambria")%>%
  save_kable(file = "tablas/consumodefrutaaldia.png", zoom=3)

#*recuerde que para guardar con save_kable es posible que necesite pasar lo siguiente: webshot::install_phantomjs() 

#07. Gráficos categóricos univariados 
##07.01:Realice un gráfico de columnas (geom_col) de la variable le04, para ello siga el siguiente proceso: 
##07.01.a: realice un tabla con le04

dfle04 <- bbdd %>% 
  freq(le04, prop = TRUE, order = "freq", report.nas = FALSE) %>%
  tb()

##07.01.b: guardela como dfle04, realice un gráfico de barras horizontales. 

ggplot(dfle04, aes(x = pct, y = fct_reorder(dfle04, pct), fill=dfle04)) +
    geom_col() + 
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
    xlab("") + ylab("") +
    labs(title = "Tiempo de lectura personal estudiantes Antropología UAH",
        subtitle = "Encuesta Estudiantes 2023",
        caption = "fuente: Encuesta Estudiantes Antropología 2023")+
  geom_text(aes(label = paste0(round(pct, 1), "%")),
            hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
            theme_ipsum()+ 
            scale_fill_viridis_d(option = "C", guide = "none")

#07.02: A partir de la misma tabla (dfle04), realice un gráfico de tortas utilizando geom_bar (stat= "indentity") y coord_polar(theta = "y")
#**** Asegurese de que las etiquetas estén bien señaladas. 

ggplot(dfle04, aes(x = "", y = pct, fill = genero)) +
       geom_bar(stat = "identity") +
       coord_polar(theta = "y") +
       labs(title = "Lectura personal Estudiantes Antropología UAH",
       caption = "fuente: Encuesta de Estudiantes UAH 2023",
       fill = "dfle04") +
       theme_ipsum() +
       scale_fill_viridis_d( guide = "legend", limits = dfle04$dfle04)

# 08. Análisis bivariados variables cualitativas 
#08.01: elija # conjunto de colores desde https://www.color-hex.com/
#guardelos en el siguiente vector
colors <- c("#", "#", "#", "#", "#") 

#acorte los nombres de le06 como sigue para que aparezcan bien en la tabla, pasando la siguiente porción de código
base <- base %>% 
  mutate(le06 = fct_recode(le06,
                           "Ficción" = "Ficción (novelas de romance, acción, suspenso, fanfics, ciencia ficción, policiales, poesía, etc)",
                           "No ficción" = "No ficción (documentos científicos, académicos, revistas, biografías, etc)"))

#08.02. Realicé la siguiente tabla de contingencia con tidyverse, reemplazando donde corresponda: 
base %>%
  filter(genero != "Prefiero no responder") %>% #quiero eleminar "Prefiero no responder" de la variable género
  select(______, _______) %>% # quiero seleccionar tipo de literatura de preferencia (le06) y genero
  droplevels() %>%
  table(.) %>% 
  addmargins(.,2) %>% #primero addmargins
  prop.table(.,2) %>% #segundo prop.table
  round(4)*100 

#08.03: ¿Qué puede interpretar de la tabla realizada?



#08.03: grafique la relación entre género y tipo de literatura de preferencia le06, llenando los espacios en blanco
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = ________)) + #ponga la variable dependiente
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  xlab("Género")+
  theme_ipsum() +
  scale_fill_manual(values = colors)+
  labs (title = "______________",  # ponga título
        caption = "____________", #ponga de donde vienen los datos
        fill= "_____________") #ponga a que refieren colores




#09. Para finalizar: 
#a) Guarde el script como prueba1_nombresuyo_apellido (ejemplo: prueba1_sebastian_muñoz) en la misma carpeta donde se sitúa su proyecto
#b) Envíe los archivos en la tarea: script, proyecto, bases y tabla
#c) o Envíe por mail a: semunoz@uahurtado.cl







