colors <- c("#ff71ce", "", "#01cdfe", "#05ffa1", "#b967ff", "#fffb96")
#realizo un gráfico de barras
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#paleta: VaporWave Color Palette
#elijo ciertos colores
colors <- c("#ff71ce", "#01cdfe", "#05ffa1", "#b967ff", "#fffb96")
#realizo un gráfico de barras
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#realizo un gráfico de barras
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#realizo un gráfico de barras
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_ipsum() +
scale_fill_manual(values = colors)
scale_fill_manual(values = colors)
#realizo un gráfico de barras
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_ipsum() +
scale_fill_manual(values = colors)+
labs (title = "Preferencia Literaria por Género",
caption = "Encuesta Estudiantes Antropología UAH",
fill= "Tipo de literatura")
#realizo un gráfico de barras
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
xlab("Género")+
theme_ipsum() +
scale_fill_manual(values = colors)+
labs (title = "Preferencia Literaria por Género",
caption = "Encuesta Estudiantes Antropología UAH",
fill= "Tipo de literatura")
base %>%
filter(genero != "Prefiero no responder") %>%
select(hs08, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
base %>%
filter(genero != "Prefiero no responder") %>%
select(hs08, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#graficar
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#Rercodifico: cuando en hs07 dice que no realizó actividad física, tampoco debería haber realizado en hs08
base <- base %>%
mutate(hs08 = case_when(
hs07 == "No realicé ninguna actividad física o deportiva" ~ "No realizo actividad física o deportiva",
TRUE ~ hs08
))
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
ggplot(data = subset(base, genero != "Prefiero no responder" & complete.cases(hs08)), aes(x = genero, fill = hs08)) + #solo utilizo filas completas
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
# 07. Análisis bivariados variables cualitativas --------------------------
# ¿La realización de actividad física se realicionará con el género en los/as estudiantes de antropología?
# hs08
unique(base$hs08)
table(base$hs08)
base %>%
filter(genero != "Prefiero no responder") %>%
select(hs08, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
#lo guardo
ct_acfisgenero <- base %>%
filter(genero != "Prefiero no responder") %>%
select(hs08, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#me sigue quedando un valor NA en Femenino
#uso sólo los complete.cases(hs08)
ggplot(data = subset(base, genero != "Prefiero no responder" & complete.cases(hs08)), aes(x = genero, fill = hs08)) + #solo utilizo filas completas
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
unique(base$le06)
ctable( x = base$le06, y = base$genero, prop = "c", justify = "l")
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
xlab("Género")+
theme_ipsum() +
scale_fill_manual(values = colors)+
labs (title = "Preferencia Literaria por Género",
caption = "Encuesta Estudiantes Antropología UAH",
fill= "Tipo de literatura")
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
xlab("Género")+
theme_ipsum() +
scale_fill_manual(values = colors)
# Trabajo en clase --------------------------------------------------------
##00. Lectura de paquetes a utilizar
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
knitr, gt, summarytools, ggthemes, hrbrthemes, stringr, tidyselect, kableExtra)
#01. Pasos básicos --------------------------------------------------------------------
#01.01 Apertura de base
#Base a trabajar
base <- read.xlsx(xlsxFile = "base/EncuestaAntropologia_2023.xlsx")
#Libro de códigos
libro <- read.csv(file = "base/Encuesta antropología 2023.csv")
#ojo hay una que está en xlsx y otra en csv: por eso uso dos librerías distintas
#observen que la forma de llamar a la base es distinta
#Pregunta: ¿Qué es un libro de códigos en una encuesta?
# https://www.ine.gob.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/libro-de-codigos/codigos-ene-2021.pdf?sfvrsn=54753851_38
#01.02 Primera mirada de la base
glimpse(base)
#02. Renombrar variables
names(base) #ver variables
names(libro) # ver libro de códigos
#renombro un conjunto de variables
base <- base %>% dplyr::rename(tiempo_libre = le01,
frutas = hs01,
limite_alcohol = al01,
rapport= eta1)
#Práctica: renombre usted 4 variables que utilizará su grupo
# base <- base %>% dplyr::rename(_______ = _______,
#                                 _______ = _______,
#                                 _______ = _______,
#                                 _______ = _______)
#03. Limpieza de valores/categorías
#observación preliminar de base de datos
DataExplorer::create_report(base)
#¿Qué valores se ven extraños y podríamos cambiar?
#03.01. Limpio: ciudad_actual: donde lee libros
names(libro)
freq(base$ciudad_actual, prop = TRUE, order = "freq", report.nas =  FALSE)
unique(base$ciudad_actual)
# observo categorías a modificar
#cambio de categorías
base <- base %>%
mutate(ciudad_actual = ifelse(ciudad_actual=="Donde pueda encontrar espacio en mi casa", yes= "Otros lugares de la casa",
no=ifelse(ciudad_actual %in% c("donde sea", "Todos los anteriores ", "Todos", "Todas las anteriores "), yes="Indefinido",
no=ciudad_actual)))
# compruebo con una tabla de frecuencias
freq(base$ciudad_actual, prop = TRUE, order = "freq", report.nas =  FALSE)
#Práctica: cambie los resultados de ciudad actual
# freq(base$________, prop = TRUE, order = "freq", report.nas =  FALSE)
# unique(base$_______)
base <- base %>%
mutate(ciudad_actual = stringi::stri_trans_general(ciudad_actual, "Latin-ASCII"),
ciudad_actual= gsub(" ", "_", ciudad_actual))
unique(base$ciudad_actual)
# base <- base %>%
#   mutate(ciudad_actual = ifelse(ciudad_actual %in% c("__________", "_________", "__________", "__________", "__________"), yes="Santiago",
#                                  no=ciudad_actual))
#¿Qué hacer con Valparaiso y Paine?
# #03.02. Limpieza de respuestas múltiples
#limpio: le11: porqué dispositivo: múltiples respuestas (multiple response)
unique(base$le11)
# cada persona, contesta más de una respuesta y aparece en la base separada por punto y coma (;)
#separo las respuestas y creo un vector que las lista
respuestas <- strsplit(base$le11, ";") # separo las respuestas que tienen punto y coma (;)
respuestas <- unlist(respuestas) #las unlisto, las saco de una lista
#observo las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#cambios quienes contestaron: libgen y wattpad (donde lo ubicarían?)
#este método de recodificación sirve para vectores
respuestas <- gsub("libgen", "A través de sitios web no oficiales (por ejemplo: Lectulandia, Thepiratebay, Sci-hub, etc)", respuestas)
respuestas <- gsub("wattpad", "Wattpad", respuestas)
#Observo
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
le11f <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Práctica: haremos lo mismo para hs07: actividades físicas que realizó####
unique(base$hs07)
respuestas <- strsplit(base$hs07, ";")
respuestas <- unlist(respuestas)
#Observo
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()%>%
print(n = 26)
#cambios quienes contestaron distintos tipos de danza, a danza.
#Danza contemporánea·
#zumba
respuestas <- gsub("Danza contemporánea·", "Danza", respuestas)
respuestas <- gsub("zumba", "Danza", respuestas)
#Práctica: cambie quienes contestaron: salir a caminar·, Caminatas Rutinarias a Caminar
##04. Preguntas abiertas
# preguntarle a chatgpt: qué recomiendas para codificar preguntas abiertas en una encuesta?
unique(base$etb2a)
unique(base$etb2b)
unique(base$etb2c)
#¿Qué tipo de palabras son?
#adjetivos: características: positivos/negativos?
#sustantivos comunes/ propios: en qué área/ámbito?
#tendrán que codificar y observar tendencias
##05. Recodificaciones
#Edad
base <- base %>%
mutate(edad = str_extract(edad, "\\d+")) %>% # solo números de la variable edad
mutate(edad = as.numeric(edad)) %>%  #la transformo en variable numérica numérico
mutate(edadr= case_when (edad %in% c(18:20) ~ "18 a 20",
edad %in% c(21:23) ~ "21 a 23",
edad %in% c(24:29) ~ "24 a 29",
edad >= 30 ~ "30 o más"))
freq(base$edadr, prop=TRUE,  report.nas = FALSE) %>%
tb()
#práctica recodifique: anio_de_ingreso en: pre_pandemicos, pandemicos, pos_pandemia
unique(base$anio_de_ingreso)
freq(base$anio_de_ingreso, prop=TRUE,  report.nas = FALSE) %>%
tb()
## 06. Análisis univariado de variables cualitativas ---------------------------
# 06.1. Distribución de frecuencias
names(base)
#genero
base %>%
freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb()
base %>%
freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
options(OutDec= ",") # que el separador de decimales sea coma (,)
#cómo haría para eliminar una categoría: "prefiero no responder"
class(base$genero)
unique(base$genero)
base %>%
mutate(genero = if_else(genero =="Prefiero no responder", as.character(NA), genero)) %>%
freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
#para guardarla
if(!dir.exists("tablas")) dir.create("tablas")
base %>%
mutate(genero = if_else(genero =="Prefiero no responder", as.character(NA), genero)) %>%
freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
#Práctica:
#realice dos distribuciones de frecuencias de las variables que utilizará
#guardelas en tabla
names(base)
names(libro)
# # 06.2. Gráficos categóricos univariados
#Para geom_col(): gráfico de barras
#Realizo una tabla
dfgenero <- base %>%
mutate(genero = if_else(genero =="Prefiero no responder", as.character(NA), genero)) %>%
freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb()
View(dfgenero)
ggplot(dfgenero, aes(x = pct, y = fct_reorder(genero, pct), fill=genero)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Género Antropología UAH",
subtitle = "Encuesta Estudiantes 2023",
caption = "fuente: Encuesta Estudiantes Antropología 2023")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
View(dfgenero)
ggplot(dfgenero, aes(x =fct_reorder(genero, pct), y = pct, fill=genero)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Género Antropología UAH",
caption = "fuente: Encuesta Estudiantes Antropología 2023")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
#opción 2
ggplot(dfgenero, aes(x =fct_reorder(genero, pct), y = pct, fill=genero)) +
geom_col() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Género Antropología UAH",
caption = "fuente: Encuesta Estudiantes Antropología 2023")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
ggplot(dfgenero, aes(x = "", y = pct, fill = genero)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Género") +
theme_ipsum() +
scale_fill_viridis_d( guide = "legend", limits = dfgenero$genero)
base %>%
filter(genero != "Prefiero no responder") %>%
select(hs08, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
base <- base %>%
mutate(hs08 = fct_recode(hs08,
"Entre 1 y 4 horas" = "Entre 1 y 4 horas",
"Más de 5" = "Entre 5 y 8 horas",
"Más de 5" = "Más de 8 horas",
"No realizo actividad física o deportiva" = "No realizo ninguna actividad física o deportiva durante la semana"))
#lo guardo
ct_acfisgenero <- base %>%
filter(genero != "Prefiero no responder") %>%
select(hs08, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
View(ct_acfisgenero)
#graficar
#elijo mi paleta: VaporWave Color Palette
#elijo ciertos colores
colors <- c("#ff71ce", "#01cdfe", "#05ffa1", "#b967ff", "#fffb96")
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) + #subset: elimino (!-) cateogía "Prefiero no responder"
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
base <- base %>%
mutate(hs08 = case_when(
hs07 == "No realicé ninguna actividad física o deportiva" ~ "No realizo actividad física o deportiva",
TRUE ~ hs08
))
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#me sigue quedando un valor NA en Femenino
#uso sólo los complete.cases(hs08)
ggplot(data = subset(base, genero != "Prefiero no responder" & complete.cases(hs08)), aes(x = genero, fill = hs08)) + #solo utilizo filas completas
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
base %>%
filter(genero != "Prefiero no responder") %>%
select(le06, genero) %>%
droplevels() %>%
table(.) %>%
addmargins(.,2) %>% #primero addmargins
prop.table(.,2) %>% #segundo prop.table
round(4)*100
ctable( x = base$le06, y = base$genero, prop = "c", justify = "l")
ggplot(data = subset(base, genero != "Prefiero no responder" & complete.cases(hs08)), aes(x = genero, fill = hs08)) + #solo utilizo filas completas
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
#Cargar paquetes
pacman::p_load(haven, tidyverse, janitor,sjmisc,kableExtra,plm, stargazer)
#cargar datos
bbdd<-read_dta("data_analysis.dta")
bbdd <- janitor::clean_names(bbdd) #minusculas
#seleccionar variables para tabla 2
bbdd <- bbdd %>%  select("lb_edad_post",
"lb_ingpercap_post",
"lb_ing_laboral",
"lb_participa",
"lb_desempleo",
"lb_ocupadas",
"lb_hrs_trabaja",
"lb_mes_trabaja",
"lb_contrato",
"lb_edu_anos",
"lb_edu_max1",
"lb_edu_max2",
"lb_edu_max3",
"lb_edu_max4",
"lb_asiste_post",
"stress",
"lb_bebe",
"lb_n_kids",
"lb_cuida_infantil",
"est1",
"est2",
"est3",
"est4",
"treatment",
"seg")
#filtrar por seguimiento (seg)
bbdd <- bbdd %>% filter( seg==1 )
## Cálculo de la diferencia de medias y estadístico t por cada variable de interés
#crear un vector con los nombres de las variables
variables_interes <- names(bbdd)
# quitar nombres de variables del tratamiento
nombres_tratamiento <- c("treatment","seg")
variables_interes <- variables_interes[!(variables_interes %in% nombres_tratamiento)]
#Creo una grilla vacía (formato dataframe) que luego se llenará con los valores del loop
resultados <- data.frame(Variable = character(),
Media_Tratado = numeric(),
Media_Control = numeric(),
Estadistico_t = numeric(),
stringsAsFactors = FALSE)
#loop
for (var in variables_interes) {
#creo 2 subconjuntos con las categorías de treatment
subset_tratado <- subset(bbdd, treatment == 1, select = var)
subset_tratado <- subset_tratado[complete.cases(subset_tratado), ]
subset_control <- subset(bbdd, treatment == 0, select = var)
subset_control <- subset_control[complete.cases(subset_control), ]
#Cálculo de las medias y el valor p del estadístico t de igualdad de medias.
mean_tratado <- mean(subset_tratado[[var]], na.rm = T)#media de tratado
mean_control <- mean(subset_control[[var]], na.rm = T)#media de control
t_test_result <- t.test(subset_tratado[[var]], subset_control[[var]])#t
p_valor <- t_test_result$p.value#p-value
#Se almacenan los resultados en la grilla formato dataframe
resultados <- rbind(resultados, data.frame(Variable = var,
Tratado = round(mean_tratado,2),
Control = round(mean_control,2),
p = round(p_valor,3)))#valor p está con 3 decimales
}
# tabla cruzada de todas las variables con treatment (tratado y control) y su valor p
resultados <- resultados %>% select(-Variable)
#Tabla descriptivos
bbdd<-bbdd %>% select(-c("treatment","seg"))
descriptivos<-sjmisc::descr(bbdd,
show = c("mean","sd","n"))
descriptivos <- descriptivos %>% select(c("mean", "sd", "n"))
descriptivos<-round(descriptivos,2)
#Fusión de ambas tablas
tabla2 <-cbind(descriptivos,resultados)
#Poner nombre a las filas
rownames(tabla2)<- c("Applicant age",
"Household per capita income",
"Applicant monthly income",
"Labor force participation rate",
"Unemployment Rate",
"Occupation Rate",
"Hours of work (daily)",
"Months Worked in 2011",
"Have employment contract",
"Years of Education",
"Proportion without education",
"Primary school proportion",
"Secondary school proportion",
"College (and/or further) education proportion",
"Attending an educational institution",
"Stress Index",
"Applicants with children less than 5 years old",
"Children signed up to the program by applicants",
"Proportion that receives childcare support",
"Strata 1: works and has children < 5 (N=369)",
"Strata 2: does not work and has children < 5 (N=109)",
"Strata 3: works and has children > 5 (N=1141)",
"Strata 4: does not work and has children > 5 (N=215)")
#tabla2
#ahora con Kable, queda una tabla fancy
kable(tabla2,
caption = "Table 2. Balance between treatment and control group at baseline",
col.names = c("Average", "SD", "N°", "Treatment", "Control", "P-value T=C"),
position = "center") %>%
kable_classic(full_width = F,
html_font = "Cambria") %>% #Definimos fuente
footnote(" ",#Especificamos la nota al pie
general_title = "Fuente: Elaboración propia en base a Martinez y Perticará (2017): Childcare effects on maternal
employment: Evidence from Chile. ")
