freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub("costura y diseño de ropa", "Artesanía y vestuario", respuestas)
respuestas <- gsub("tejer", "Artesanía y vestuario", respuestas)
respuestas <- gsub("ver videos en youtube de temas variados.", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("ver programas de humor", "Ver contenido audiovisual", respuestas)ver series y / o películas.
respuestas <- gsub("ver programas de humor", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("ver series y / o películas.", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("escuchar podcast", "Socializar", respuestas)
respuestas <- gsub("salir con amigos / familia.", "Socializar", respuestas)
respuestas <- gsub("tocar música", "Música", respuestas)
respuestas <- gsub("escuchar música", "Música", respuestas)
respuestas <- gsub("bailar y/o cantar", "Música", respuestas)
#Reviso nuevamente
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub("Música.", "Música", respuestas)
#Reviso nuevamente
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
actividad_ocio <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
names(base)
#Práctica: haremos lo mismo para cm_05: lugar_musica
unique(base$cm_05)
View(base)
names(base)
# Distribución de frecuencias --------------------------------------------
#identidad de género recodificada
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb()
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse, openxlsx, summarytools, Kable)
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse, openxlsx, summarytools, kableExtra)
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
install.packages(webshot2)
installed.packages("webshot2")
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse, openxlsx, summarytools, kableExtra,webshot2)
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
install.packages("chromote")
install.packages("chromote")
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse, openxlsx, summarytools, kableExtra,webshot2)
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse, openxlsx, summarytools, kableExtra,webshot2,chromote)
# 01 Cargar datos--------------------------------------------------------
base <- read.xlsx("base/base_antropologia_limpia.xlsx")
base <- base %>% dplyr::rename(interes_participar_ma = ma_02,
nivel_info_basura = ma_01,
actividad_ocio = to_04,#TO_04. ¿Cuáles de estas actividades prefiere realizar en su tiempo de ocio?
lugar_musica= cm_05)#CM_05.  ¿Dónde suele escuchar música habitualmente? Seleccione más de una alternativa si corresponde.
table(base$actividad_ocio)
respuestas <- strsplit(base$actividad_ocio, ",") # separar las respuestas que tienen coma (,)
# Convertimos la lista en un vector
respuestas <- unlist(respuestas) # sacar de una lista y convertir en un vector
# observo las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# Elimino caracteres invisibles y espacios adicionales
respuestas <- gsub("[·]", "", respuestas) # eliminar el carácter "·"
respuestas <- trimws(respuestas) # eliminar espacios en blanco al inicio y al final
# Normalizar respuestas para eliminar diferencias menores
respuestas <- tolower(respuestas) # convierto todo a minúsculas (opcional)
respuestas <- gsub("[[:space:]]+", " ", respuestas) # reemplazo múltiples espacios con un solo espacio
#Vuelvo a revisar como quedaron las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub("costura y diseño de ropa", "Artesanía y vestuario", respuestas)
respuestas <- gsub("tejer", "Artesanía y vestuario", respuestas)
respuestas <- gsub("ver videos en youtube de temas variados.", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("ver programas de humor", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("ver series y / o películas.", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("escuchar podcast", "Socializar", respuestas)
respuestas <- gsub("salir con amigos / familia.", "Socializar", respuestas)
respuestas <- gsub("Música.", "Música", respuestas)
respuestas <- gsub("tocar música", "Música", respuestas)
respuestas <- gsub("escuchar música", "Música", respuestas)
respuestas <- gsub("bailar y/o cantar", "Música", respuestas)
#Reviso nuevamente
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
actividad_ocio <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb()
#Tabla fancy
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
#Tabla fancy
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
#Tabla fancy
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2)) %>%  # Decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse, openxlsx, summarytools, kableExtra,webshot2,chromote)
# 01 Cargar datos--------------------------------------------------------
base <- read.xlsx("base/base_antropologia_limpia.xlsx")
# 02 explorar base--------------------------------------------------------
str(base)
summary(base)
view(base)
# 03 Renombrar variables--------------------------------------------------------
base <- base %>% dplyr::rename(interes_participar_ma = ma_02,
nivel_info_basura = ma_01,
actividad_ocio = to_04,#TO_04. ¿Cuáles de estas actividades prefiere realizar en su tiempo de ocio?
lugar_musica= cm_05)#CM_05.  ¿Dónde suele escuchar música habitualmente? Seleccione más de una alternativa si corresponde.
table(base$actividad_ocio)
respuestas <- strsplit(base$actividad_ocio, ",") # separar las respuestas que tienen coma (,)
# Convertimos la lista en un vector
respuestas <- unlist(respuestas) # sacar de una lista y convertir en un vector
# observo las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# Elimino caracteres invisibles y espacios adicionales
respuestas <- gsub("[·]", "", respuestas) # eliminar el carácter "·"
respuestas <- trimws(respuestas) # eliminar espacios en blanco al inicio y al final
# Normalizar respuestas para eliminar diferencias menores
respuestas <- tolower(respuestas) # convierto todo a minúsculas (opcional)
respuestas <- gsub("[[:space:]]+", " ", respuestas) # reemplazo múltiples espacios con un solo espacio
#Vuelvo a revisar como quedaron las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Necesito cambiar categorías de respuesta pero
#No puedo Recodificar directamente en distintas categorías porque no es una variable!
#Utilizo gsub
#cambio categorías parecidas y reduzco categorías de respuestas
respuestas <- gsub("costura y diseño de ropa", "Artesanía y vestuario", respuestas)
respuestas <- gsub("tejer", "Artesanía y vestuario", respuestas)
respuestas <- gsub("ver videos en youtube de temas variados.", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("ver programas de humor", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("ver series y / o películas.", "Ver contenido audiovisual", respuestas)
respuestas <- gsub("escuchar podcast", "Socializar", respuestas)
respuestas <- gsub("salir con amigos / familia.", "Socializar", respuestas)
respuestas <- gsub("Música.", "Música", respuestas)
respuestas <- gsub("tocar música", "Música", respuestas)
respuestas <- gsub("escuchar música", "Música", respuestas)
respuestas <- gsub("bailar y/o cantar", "Música", respuestas)
#Reviso nuevamente
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
actividad_ocio <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb()
#Tabla fancy
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
#para guardarla
if(!dir.exists("tablas")) dir.create("tablas") #si no existe la carpeta "tablas" la creo
#Tabla fancy
base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas = FALSE) %>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2)) %>%  # Decimales por columna
kable_classic(full_width = F, html_font = "Cambria") %>%
save_kable(file = "tablas/dfgenero1.png", zoom = 3)
#Tabla fancy
tabla<-base %>%
freq(identidad_genero_r, prop = TRUE, order = "freq", report.nas =  FALSE)%>%
tb() %>%
kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
caption = "Distribución de frecuencias de Género",
digits = c(0, 0, 2, 2))%>%  #decimales por columna
kable_classic(full_width = F, html_font = "Cambria")
?save_kable()
save_kable(tabla,file = "tablas/dfgenero1.png", zoom = 3)
ggplot(actividad_ocio, aes(x = pct, y = fct_reorder(actividad_ocio, pct), fill=actividad_ocio)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Actividades de Ocio estudiantes Antropología",
subtitle = "Encuesta Estudiantes 2024", #(opcional)
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
# 00 Paquetes --------------------------------------------------------
pacman::p_load(tidyverse,
openxlsx,
summarytools,
kableExtra,#Tablas elegantes
webshot2,#exportar tablas
chromote,
hrbrthemes)#temas de gráficos
# Gráficos categóricos univariados ----------------------------------------
#opción 1
ggplot(actividad_ocio, aes(x = pct, y = fct_reorder(actividad_ocio, pct), fill=actividad_ocio)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Actividades de Ocio estudiantes Antropología",
subtitle = "Encuesta Estudiantes 2024", #(opcional)
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
View(actividad_ocio)
# Gráficos categóricos univariados ----------------------------------------
#opción 1
ggplot(actividad_ocio, aes(x = pct, y = fct_reorder(actividad_ocio, pct), fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Actividades de Ocio estudiantes Antropología",
subtitle = "Encuesta Estudiantes 2024", #(opcional)
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
# Gráficos categóricos univariados ----------------------------------------
#opción 1
ggplot(actividad_ocio, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Actividades de Ocio estudiantes Antropología",
subtitle = "Encuesta Estudiantes 2024", #(opcional)
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
#opción 2
ggplot(actividad_ocio, aes(x =fct_reorder(respuestas, pct), y = pct, fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Género Antropología UAH",
caption = "fuente: Encuesta Estudiantes Antropología 2023")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
# gráfico de tortas
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d( guide = "legend", limits = dfgenero$genero)
# gráfico de tortas
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d( guide = "legend", limits = actividad_ocio$respuestas)
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum()
?scale_fill_viridis_d
# gráfico de tortas
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d(guide ="colourbar" , limits = actividad_ocio$respuestas)
# gráfico de tortas
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d(guide ="coloursteps" , limits = actividad_ocio$respuestas)
# gráfico de tortas
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d(guide = "legend", limits = actividad_ocio$respuestas)
#Vuelvo a revisar como quedaron las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
respuestas <- gsub("Música.", "Música", respuestas)
#Vuelvo a revisar como quedaron las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
#Guardo para graficar
actividad_ocio <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>%
tb()
# Gráficos categóricos univariados ----------------------------------------
#opción 1
ggplot(actividad_ocio, aes(x = pct, y = fct_reorder(respuestas, pct), fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Actividades de Ocio estudiantes Antropología",
subtitle = "Encuesta Estudiantes 2024", #(opcional)
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
#opción 2
ggplot(actividad_ocio, aes(x =fct_reorder(respuestas, pct), y = pct, fill=respuestas)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta Estudiantes Antropología 2024")+
theme_ipsum()+
scale_fill_viridis_d(option = "C", guide = "none")
# gráfico de tortas
ggplot(actividad_ocio, aes(x = "", y = pct, fill = respuestas)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Género Estudiantes UAH",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d(guide = "legend", limits = actividad_ocio$respuestas)
table(base$nivel_info_basura)
str(base$nivel_info_basura)
names(base)
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Zona")+
theme_bw(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Zona")+
theme_bw(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
fill = "Zona")+
theme(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
y= "Nivel de interés en participar en gestión de residuos"
fill = "Zona")+
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
y= "Nivel de interés en participar en gestión de residuos",
fill = "Zona")+
theme(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Actividades de Ocio estudiantes Antropología",
caption = "fuente: Encuesta de Estudiantes UAH 2023",
y= "Interés en gestión de residuos",
fill = "Zona")+
theme(legend.position="none")
ggplot(base, aes(x=identidad_genero_r, y=nivel_info_basura, fill=identidad_genero_r)) +
geom_boxplot(alpha=0.3) +
labs(title = "Interés en gestión de residuos según género",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Interés en gestión de residuos",
fill = "Identidad de género")+
theme(legend.position="none")
View(base)
ggplot(base, aes(x=clase_social, y=nivel_info_basura, fill=clase_social)) +
geom_boxplot(alpha=0.3) +
labs(title = "Interés en gestión de residuos según clase social",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Interés en gestión de residuos",
fill = "Clase Social")+
theme(legend.position="none")
table(base$comuna_distancia)
ggplot(base, aes(x=comuna_distancia, y=nivel_info_basura, fill=comuna_distancia)) +
geom_boxplot(alpha=0.3) +
labs(title = "Interés en gestión de residuos según zona de la capital",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Interés en gestión de residuos",
fill = "Zona")+
theme(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=nivel_info_basura, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Interés en gestión de residuos según zona de la capital",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Interés en gestión de residuos",
fill = "Zona")+
theme(legend.position="none")
ggplot(base, aes(x=clase_social, y=interes_participar_ma, fill=clase_social)) +
geom_boxplot(alpha=0.3) +
labs(title = "Interés en gestión de residuos según clase social",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Interés en gestión de residuos",
fill = "Clase Social")+
theme(legend.position="none")
ggplot(base, aes(x=comuna_r1, y=interes_participar_ma, fill=comuna_r1)) +
geom_boxplot(alpha=0.3) +
labs(title = "Interés en gestión de residuos según zona de la capital",
caption = "Fuente: Encuesta de Estudiantes UAH 2024",
y= "Interés en gestión de residuos",
fill = "Zona")+
theme(legend.position="none")
?t.test()
base %>% t.test(interes_participar_ma,identidad_genero_r)
base %>% t.test(interes_participar_ma~identidad_genero_r)
base %>% t.test(identidad_genero_r~interes_participar_ma)
t.test(interes_participar_ma~ identidad_genero_r, data=base)
View(base)
str(base)
summary(base)
unique(base$identidad_genero_r)
base<-base %>% mutate(genero_dicotomico= case_when(identidad_genero_r=="Hombre cisgenero" ~ "Hombre" ,
identidad_genero_r=="Mujer cisgenero" ~ "Mujer"))
t.test(interes_participar_ma ~ genero_dicotomico, data=base)
?anova
class(identidad_genero_r)
class(base$identidad_genero_r)
base$identidad_genero_r <- as.factor(base$identidad_genero_r)
#
anova_result <- aov(interes_participar_ma ~ identidad_genero_r, data = data)
#
anova_result <- aov(interes_participar_ma ~ identidad_genero_r, data = base)
summary(anova_result)
aov(interes_participar_ma ~ identidad_genero_r, data = base)
summary(t_test_result)
t_test_result <-t.test(interes_participar_ma ~ genero_dicotomico, data=base)
summary(t_test_result)
summary(t_test_result$p.value)
t_test_result$p.value
