
# Paquetes ----------------------------------------------------------------
#install.packages("pacman")

pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
               knitr, gt, summarytools, ggthemes, hrbrthemes, stringr, tidyselect, kableExtra)

# Base --------------------------------------------------------------------
base <- read.xlsx("base/base_antropologia_limpia.xlsx")

str(base)


# Medio Ambiente  -------------------------------------------------------------

#Interés en participar en actividades educativas... (ma_02)



# Trabajo en clase --------------------------------------------------------
base <- read.xlsx(xlsxFile = "base/EncuestaAntropologia_2023.xlsx")


#01. Renombrar variables
names(base) #ver variables
names(libro) # ver libro de códigos

#renombro un conjunto de variables
base <- base %>% dplyr::rename(tiempo_libre = le01,  
                                 frutas = hs01,
                                 limite_alcohol = al01, 
                                 rapport= eta1)


#renombre usted 4 variables que utilizará su grupo: Práctica

# base <- base %>% dplyr::rename(_______ = _______,  
#                                _______ = _______,
#                                _______ = _______, 
#                                _______ = _______)



# limpio: le10: donde lee libros
names(libro)
freq(base$le10, prop = TRUE, order = "freq", report.nas =  FALSE)
unique(base$le10)

base <- base %>%
  mutate(le10 = ifelse(le10=="Donde pueda encontrar espacio en mi casa", yes= "Otros lugares de la casa", 
                          no=ifelse(le10 %in% c("donde sea", "Todos los anteriores ", "Todos", "Todas las anteriores "), yes="Indefinido", 
                                    no=le10)))

# compruebo con una tabla de frecuencias
freq(base$le10, prop = TRUE, order = "freq", report.nas =  FALSE)


# limpio: le11: porqué dispositivo: múltiples respuestas (multiple response)
unique(base$le11)

#separo las respuestas
respuestas <- strsplit(base$le11, ";") # separo las respuestas que tienen punto y come (;)
respuestas <- unlist(respuestas) #las unlisto, las saco de una lista

#observo las respuestas
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>% 
  tb()

#cambios quienes contestaron otros
respuestas <- gsub("libgen", "A través de sitios web no oficiales (por ejemplo: Lectulandia, Thepiratebay, Sci-hub, etc)", respuestas)
respuestas <- gsub("wattpad", "Wattpad", respuestas)

#Observo
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>% 
  tb()

#Guardo para graficar
le11f <- freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>% 
  tb()



#Práctica: haremos lo mismo para hs07: actividades físicas que realizó####
unique(base$hs07)

respuestas <- strsplit(base$hs07, ";")
respuestas <- unlist(respuestas)

#Observo
freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>% 
  tb() 

freq(respuestas, prop=TRUE, order = "freq", report.nas = FALSE) %>% 
  tb()%>% 
  print(n = 26)


#cambios quienes contestaron distintos tipos de danza, a danza. 
#Danza contemporánea·
#zumba
respuestas <- gsub("Danza contemporánea·", "Danza", respuestas)
respuestas <- gsub("zumba", "Danza", respuestas)

#cambie quienes contestaron: salir a caminar·, Caminatas Rutinarias a Caminar



# preguntarle a chatgpt: qué recomiendas para codificar preguntas abiertas en una encuesta?
unique(base$etb2a)
unique(base$etb2b)
unique(base$etb2c)

#¿Qué tipo de palabras son?
#adjetivos: características: positivos/negativos?
#sustantivos comunes/ propios: en qué área/ámbito?
#tendrán que codificar y observar tendencias


#recodificaciones: edad
base <- base %>%
  mutate(edad = str_extract(edad, "\\d+")) %>% # solo números de la variable edad
  mutate(edad = as.numeric(edad)) %>%  #la transformo en variable numérica numérico
  mutate(edadr= case_when (edad %in% c(18:20) ~ "18 a 20", 
                           edad %in% c(21:23) ~ "21 a 23", 
                           edad %in% c(24:29) ~ "24 a 29", 
                           edad >= 30 ~ "30 o más"))

freq(base$edadr, prop=TRUE,  report.nas = FALSE) %>% 
  tb() 

#práctica recodifique: anio_de_ingreso en: pre_pandemicos, pandemicos, pos_pandemia
unique(base$anio_de_ingreso)
freq(base$anio_de_ingreso, prop=TRUE,  report.nas = FALSE) %>% 
  tb() 


# Distribución de frecuencias --------------------------------------------
names(base)

#genero
options(OutDec= ",") # que el separador de decimales sea coma (,)


base %>% 
  freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>% 
  tb()


base %>% 
  freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>% 
  tb() %>%
  kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
        caption = "Distribución de frecuencias de Género", 
        digits = c(0, 0, 2, 2))%>%  #decimales por columna
  kable_classic(full_width = F, html_font = "Cambria") 

#cómo haría para eliminar una categoría: "prefiero no responder"
class(base$genero)
unique(base$genero)

base %>% 
  mutate(genero = if_else(genero =="Prefiero no responder", as.character(NA), genero)) %>%
  freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>% 
  tb() %>%
  kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
        caption = "Distribución de frecuencias de Género", 
        digits = c(0, 0, 2, 2))%>%  #decimales por columna
  kable_classic(full_width = F, html_font = "Cambria") 

#para guardarla
if(!dir.exists("tablas")) dir.create("tablas")

base %>% 
  mutate(genero = if_else(genero =="Prefiero no responder", as.character(NA), genero)) %>%
  freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>% 
  tb() %>%
  kable(col.names = c("Género", "Frecuencia", "%", "% Acumulado"),
        caption = "Distribución de frecuencias de Género", 
        digits = c(0, 0, 2, 2))%>%  #decimales por columna
  kable_classic(full_width = F, html_font = "Cambria") %>% 
  save_kable(file = "tablas/dfgenero1.png", zoom = 3)


#Práctica: realice dos distribuciones de frecuencias
names(base)
names(libro)



# Gráficos categóricos univariados ----------------------------------------

dfgenero <- base %>% 
  mutate(genero = if_else(genero =="Prefiero no responder", as.character(NA), genero)) %>%
  freq(genero, prop = TRUE, order = "freq", report.nas =  FALSE)%>% 
  tb() 

names(dfgenero)

#opción 1
ggplot(dfgenero, aes(x = pct, y = fct_reorder(genero, pct), fill=genero)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab("") + ylab("") +
  labs(title = "Género Antropología UAH", 
       subtitle = "Encuesta Estudiantes 2023",
       caption = "fuente: Encuesta Estudiantes Antropología 2023")+
  geom_text(aes(label = paste0(round(pct, 1), "%")), #concatena porcentaje con un decimal y "%".
            hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
  theme_ipsum()+
  scale_fill_viridis_d(option = "C", guide = "none")

#opción 2
ggplot(dfgenero, aes(x =fct_reorder(genero, pct), y = pct, fill=genero)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab("") + ylab("") +
  labs(title = "Género Antropología UAH", 
       caption = "fuente: Encuesta Estudiantes Antropología 2023")+
  theme_ipsum()+
  scale_fill_viridis_d(option = "C", guide = "none")


#Práctica: realice dos gráficos de barras, con dos variables distintas


# gráfico de tortas
ggplot(dfgenero, aes(x = "", y = pct, fill = genero)) +
  geom_bar(stat = "identity") + 
  coord_polar(theta = "y") + # esto permite hacer gráfico de torta
  labs(title = "Género Estudiantes UAH", 
       caption = "fuente: Encuesta de Estudiantes UAH 2023",
       fill = "Religión") +
  theme_ipsum() +
  scale_fill_viridis_d( guide = "legend", limits = dfgenero$genero)

#por default: geom_bar cuenta las frecuencias, esto sería geom_bar(stat = "count")
#stat = "identity": cada barra representa el porcentaje de la categoría.

#Práctica: realice dos gráficos de torta.


# Análisis bivariados  --------------------------------------------------

names(libro)
names(base)

#¿La preferencia de ficción o no ficción dependerá del género?

names(base)
names(libro)
unique(base$le06)


#acorto los nombres para que aparezcan bien en la tabla
base <- base %>% 
  mutate(le06 = fct_recode(le06,
                           "Ficción" = "Ficción (novelas de romance, acción, suspenso, fanfics, ciencia ficción, policiales, poesía, etc)",
                           "No ficción" = "No ficción (documentos científicos, académicos, revistas, biografías, etc)"))


#Realizo tabla de contingencia
ct_lecgenero <- base %>%
  filter(genero != "Prefiero no responder") %>%
  select(le06, genero) %>%
  droplevels() %>%
  table(.) %>% 
  addmargins(.,2) %>% #primero addmargins
  prop.table(.,2) %>% #segundo prop.table
  round(4)*100 


#graficar

#elijo ciertos colores
colors <- c("#440154", "#b2df8a", "#365A8C", "#277E8E", "#1FA088", "#44A96C", "#7FBC41", 
                     "#B3CC2A", "#FDE725", "#46337E", "#b07aa1", "#ff9da7", "#9c755f", 
                     "#bab0ac", "#5c5c5c") 


#realizo un gráfico de barras 
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = le06)) +
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  theme_classic() +
  scale_fill_manual(values = colors)


#¿Por qué los hombres leerán más ficción que las mujeres?


# Realice lo mismo para actividad física: hs08
unique(base$hs08)
table(base$hs08)

base %>%
  filter(genero != "Prefiero no responder") %>%
  select(hs08, genero) %>%
  droplevels() %>%
  table(.) %>% 
  addmargins(.,2) %>% #primero addmargins
  prop.table(.,2) %>% #segundo prop.table
  round(4)*100 

#recodifico para tener menos categorías 
base <- base %>% 
  mutate(hs08 = fct_recode(hs08,
                           "Entre 1 y 4 horas" = "Entre 1 y 4 horas",
                           "Más de 5" = "Entre 5 y 8 horas", 
                           "Más de 5" = "Más de 8 horas", 
                           "No realizo actividad física o deportiva" = "No realizo ninguna actividad física o deportiva durante la semana"))


#lo guardo
ct_acfisgenero <- base %>%
  filter(genero != "Prefiero no responder") %>%
  select(hs08, genero) %>%
  droplevels() %>%
  table(.) %>% 
  addmargins(.,2) %>% #primero addmargins
  prop.table(.,2) %>% #segundo prop.table
  round(4)*100 



# para la realización de actividad física 

#graficar
ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) +
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  theme_classic() +
  scale_fill_manual(values = colors)


base <- base %>% 
  mutate(hs08 = case_when(
    hs07 == "No realicé ninguna actividad física o deportiva" ~ "No realizo actividad física o deportiva",
    TRUE ~ hs08
  ))

ggplot(data = subset(base, genero != "Prefiero no responder"), aes(x = genero, fill = hs08)) +
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  theme_classic() +
  scale_fill_manual(values = colors)


ggplot(data = subset(base, genero != "Prefiero no responder" & complete.cases(hs08)), aes(x = genero, fill = hs08)) + #solo utilizo filas completas
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  theme_classic() +
  scale_fill_manual(values = colors)




