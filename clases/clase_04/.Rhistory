#qué pasa si yo tranformo un numérico a character
class(x)
Candidato <- c("Kast", "Boric")
Votos <- c("64000", "78000")
Mesas <- c("Mesa1", "Mesa1")
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
class(opcion_2)
# listas####
# objeto que puede almacenar muchos tipos de datos
mi.lista <- list("letras" =  letters[1:4], opcion_2 =  opcion_2, numeros = c(1,2,3))
opcion_2 <- data.frame(Candidato, Votos, Mesas)
Candidato <- c("Kast", "Boric")
Votos <- c("64000", "78000")
Mesas <- c("Mesa1", "Mesa1")
opcion_2 <- data.frame(Candidato, Votos, Mesas)
opcion_2
# listas####
# objeto que puede almacenar muchos tipos de datos
mi.lista <- list("letras" =  letters[1:4], opcion_2 =  opcion_2, numeros = c(1,2,3))
View(mi.lista)
q <- as.factor(c("Santiago", "Valparaíso", "Viña del Mar"))
table(q)
mi.lista_mal <- list("letras" <-   letters[1:4], opcion_2 <-  opcion_2, numeros <- c(1,2,3))
View(mi.lista_mal)
View(mi.lista)
View(mi.lista_mal)
#acceso
mi.lista [[1]]
mi.lista [[2]]
mi.lista [[3]]
mi.lista[["letras"]]
mi.lista[["opcion_2"]]
mi.lista_mal <- list("letras" <-   letters[1:4], opcion_2 <-  opcion_2, numeros <- c(1,2,3))
View(mi.lista_mal)
View(mi.lista)
install.packages("pacman")
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer) #dos formatos de excel xlsx y xl
#abro el archivo y la asigno en el environment
datos <- read.xlsx(xlsxFile = "base/Encuesta Estudiantes Antropología (respuestas).xlsx", colNames = TRUE, detectDates = TRUE)
names(datos) #observo que hay puntos, mayúsculas y minúsculas, etcétera. Está sucia
#limpieza inicial
datos <- janitor::clean_names(datos) #con esto transformo todo a minúscula, quito tildes y borro espacios
names(datos)
#abro el archivo y la asigno en el environment
datos <- read.xlsx(xlsxFile = "base/Encuesta Estudiantes Antropología (respuestas).xlsx", colNames = TRUE, detectDates = TRUE)
View(datos)
View(datos)
names(datos) #observo que hay puntos, mayúsculas y minúsculas, etcétera. Está sucia
#limpieza inicial
datos <- janitor::clean_names(datos) #con esto transformo todo a minúscula, quito tildes y borro espacios
names(datos)
datos <- clean_names(datos)
#observación de base
nrow(datos) # cantidad de casos
ncol(datos) # cantidad de variables
sapply(datos, FUN = class) # sapply: realiza un a función a varias variables
View(datos)
#extraigo el nombre de todas las variables
names (datos)
# genero un vector con todas las columnas que quiero renombrar
cols_a_renombrar <- c(
"p01_nombre_del_entrevistado_a",
"p02_edad_del_a_entrevistado",
"p03_genero_del_a_entrevistado_a",
"p04_ano_en_que_se_encuentra_de_la_carrera_1_2_3_4_5",
"p05_comuna_actual_de_residencia",
"p06_comuna_de_residencia_de_su_familia_nuclear_padres_hermanos_as_la_que_vivio_la_mayor_parte_de_infancia_y_adolescencia",
"p07_ultimo_tipo_de_establecimiento_educativo_al_realizar_su_ensenanza_media",
"p08_puntaje_final_obtenido_en_la_prueba_de_seleccion_universitaria_poderado_segun_carrera_elegida",
"p09_cual_de_estas_situaciones_describe_mejor_su_actividad_principal_durante_el_ultimo_mes",
"p10_indique_el_maximo_nivel_educativo_obtenido_por_su_madre",
"p11_actualmente_su_madre_trabaja",
"p12_cual_es_la_ocupacion_u_oficio_actual_de_su_madre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre",
"p13_indique_el_maximo_nivel_educativo_obtenido_por_su_padre",
"p14_actualmente_su_padre_trabaja",
"p15_cual_es_la_ocupacion_u_oficio_actual_de_su_padre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre",
"p17_quien_es_el_principal_sostenedor_a_de_su_hogar_actual_quien_aporta_mas_ingresos",
"p18_en_la_sociedad_comunmente_existen_distintos_grupos_o_clases_sociales_las_personas_de_clase_social_alta_son_las_que_tienen_los_ingresos_mas_altos_el_mayor_nivel_de_educacion_y_los_trabajos_mas_valorados_las_personas_de_clase_social_baja_son_las_que_tienen_los_ingresos_mas_bajos_el_menor_nivel_de_educacion_y_los_trabajos_menos_valorados_entre_estas_clases_existen_otras_intermedias_segun_su_opinion_a_cual_de_los_siguientes_grupos_o_clases_sociales_pertenece_usted",
"p19_podria_decirme_si_su_casa_tiene_computador_ya_sea_notebook_o_de_escritorio_actualmente",
"p20_podria_decirme_si_usted_tiene_computador_para_uso_personal_ya_sea_notebook_o_de_escritorio_actualmente",
"p21_podria_decirme_si_usted_tiene_smartphone_personal_actualmente",
"p22_con_que_frecuencia_escucha_musica",
"p23_que_tipo_de_musica_es_la_que_mas_prefiere_escuchar",
"p24_si_eligio_otra_cual",
"p25_cual_es_la_segunda_musica_que_mas_prefiere_escuchar",
"p26_si_eligio_otra_cual",
"p27_con_que_dispositivo_suele_escuchar_mas_musica",
"p28_cual_es_principal_sitio_programa_o_aplicacion_para_bajar_o_escuchar_musica",
"p29_si_respondio_otro_cual",
"p30_cual_es_la_red_social_pasa_mas_tiempo",
"p31_si_respondio_otra_cual",
"p32_y_cual_es_la_segunda_red_social_pasa_mas_tiempo",
"p33_si_respondio_otra_cual")
nuevos_nombres <- str_sub(string = cols_a_renombrar, start = 1, end = 3 ) #muestro los argumentos
nuevos_nombres
#renombro considerando todas las columnas elegidas asignando nuevos nombres
datos <- datos %>%
rename_at(vars(cols_a_renombrar), ~ nuevos_nombres) #recodificación múltiples con un vector
View(datos)
View(datos)
#genero un vector sólo con las 3 primeras letras: p01
nuevos_nombres <- str_sub(cols_a_renombrar, 1, 10)  #no muestro los argumentos
nuevos_nombres
#genero un vector sólo con las 3 primeras letras: p01
nuevos_nombres <- str_sub(cols_a_renombrar, 1, 3)  #no muestro los argumentos
#veo categorías de todas las variables
sapply(datos, FUN = unique)
#posibilidad de renombrar uno por uno las variables de interés.
datos <- datos %>% dplyr::rename(nombre = p01,  # primero nuevo nombre y luego nombre antiguo
edad = p02,
genero = p03,
annio = p04,
comuna_actual = p05,
comuna_pre= p06,
tipo_colegio = p07,
puntaje = p08,
estudio_trabajo = p09,
educacion_madre = p10,
trabaja_madre =p11,
empleo_madre =p12,
educacion_padre =p13,
trabaja_padre =p14,
empleo_padre = p15,
psdhogar = p17,
clase_social_subjetiva = p18)
# selección y transformación de variables ---------------------------------
DataExplorer::create_report(datos)
library(create_report)
install.packages(DataExplorer)
install.packages("DataExplorer")
library(create_report)
library(DataExplorer)
install.packages ("htmltools")
install.packages("htmltools")
library(htmltools)
library(htmltools)
library(DataExplorer)
names (datos)
unique(datos$comuna_actual)
datos$comuna_actual <- tolower(datos$comuna_actual) #todas a minusculas
unique(datos$comuna_actual)
datos$comuna_actual  <- gsub(" ", "", datos$comuna_actual)
unique(datos$comuna_actual)
datos$comuna_actual  <- gsub(pattern = " ", replacement = "", x = datos$comuna_actual)
table(datos$comuna_actual)
datos$comuna_pre <- tolower(datos$comuna_pre)
datos$comuna_pre  <- gsub(" ", "", datos$comuna_pre)
table(datos$comuna_pre)
datos$comuna_actual  <- gsub("[áÁ]", "a", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[éÉ]", "e", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[íÍ]", "i", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[óÓ]", "o", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[úÚ]", "u", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("ñ", "n", x = datos$comuna_actual)
table(datos$comuna_actual)
datos$comuna_pre  <- gsub("[áÁ]", "a", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[éÉ]", "e", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[íÍ]", "i", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[óÓ]", "o", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[úÚ]", "u", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("ñ", "n", x = datos$comuna_pre)
table(datos$comuna_pre)
names(datos)
datos <- datos %>%
mutate(empleo_madre = stringi::stri_trans_general(empleo_madre, "Latin-ASCII"),
empleo_padre = stringi::stri_trans_general(empleo_padre, "Latin-ASCII"),
empleo_madre = tolower (empleo_madre),
empleo_padre = tolower (empleo_padre),
empleo_madre = gsub(" ", "_", empleo_madre),
empleo_padre= gsub(" ", "_", empleo_padre))
#otra opción para sacar tildes, ñ, transformar todo a minúscula y eliminar espacios
library(tidyverse)
datos <- datos %>%
mutate(empleo_madre = stringi::stri_trans_general(empleo_madre, "Latin-ASCII"),
empleo_padre = stringi::stri_trans_general(empleo_padre, "Latin-ASCII"),
empleo_madre = tolower (empleo_madre),
empleo_padre = tolower (empleo_padre),
empleo_madre = gsub(" ", "_", empleo_madre),
empleo_padre= gsub(" ", "_", empleo_padre))
#limpieza de datos
table(datos$puntaje)
class(datos$puntaje)
unique (datos$puntaje)
#limpieza de datos
table(datos$puntaje)
class(datos$puntaje)
datos <- datos %>%
mutate(puntaje = ifelse(puntaje =="700+", "700", puntaje))
table(datos$puntaje)
class(datos$puntaje) # observo que está en character, ¿Qué pasa si está en character?
datos$puntaje <- as.numeric(datos$puntaje) #lo transformo a numeric
class(datos$puntaje)
datos <- datos %>%
mutate (edadr= case_when (edad %in% c(18:20) ~ "18 a 20",
edad %in% c(21:23) ~ "21 a 23",
edad %in% c(24:29) ~ "24 a 29",
edad >= 30 ~ "30 o más"))
table(datos$edadr) # observo la recodificación
datos <- datos %>%
mutate (edadr= case_when (edad %in% c(18:20) ~ "18 a 20",
edad %in% c(21:23) ~ "21 a 23",
edad %in% c(24:29) ~ "24 a 29",
edad >= 30 ~ "30 o más"))
class(datos$edadr)
class(datos$edad)
unique (datos$educacion_madre)
unique (datos$educacion_madre)
library(DataExplorer)
library(htmltools)
install.packages ("htmltools")
install.packages("htmltools")
library(DataExplorer)
install.packages("htmltools")
install.packages("htmltools")
library(htmltools)
library(DataExplorer)
library(DataExplorer)
install.packages("DataExplorer")
library(DataExplorer)
install.packages("htmltools", version = "0.5.4")
install.packages("htmltools", version = "0.5.4")
library(htmltools)
library(DataExplorer)
#abro el archivo y la asigno en el environment
datos <- read.xlsx(xlsxFile = "base/Encuesta Estudiantes Antropología (respuestas).xlsx", colNames = TRUE, detectDates = TRUE)
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer) #dos formatos de excel xlsx y xl
#abro el archivo y la asigno en el environment
datos <- read.xlsx(xlsxFile = "base/Encuesta Estudiantes Antropología (respuestas).xlsx", colNames = TRUE, detectDates = TRUE)
# selección y transformación de variables ---------------------------------
DataExplorer::create_report(datos)
datos <- datos %>%
mutate(puntaje = ifelse(test == "700+", "700", puntaje))
datos <- datos %>%
mutate(puntaje = ifelse(puntaje == "700+", yes= "700", no= puntaje))
View(datos)
#abro el archivo y la asigno en el environment
datos <- read.xlsx(xlsxFile = "base/Encuesta Estudiantes Antropología (respuestas).xlsx", colNames = TRUE, detectDates = TRUE)
names(datos) #observo que hay puntos, mayúsculas y minúsculas, etcétera. Está sucia
#limpieza inicial
datos <- janitor::clean_names(datos) #con esto transformo todo a minúscula, quito tildes y borro espacios
names(datos)
#observación de base
nrow(datos) # cantidad de casos
ncol(datos) # cantidad de variables
sapply(datos, FUN = class) # sapply: realiza un a función a varias variables
# Renombrar variables -----------------------------------------------------
#extraigo el nombre de todas las variables
names (datos)
# [1] "marca_temporal"
# [2] "p01_nombre_del_entrevistado_a"
# [3] "p02_edad_del_a_entrevistado"
# [4] "p03_genero_del_a_entrevistado_a"
# [5] "p04_ano_en_que_se_encuentra_de_la_carrera_1_2_3_4_5"
# [6] "p05_comuna_actual_de_residencia"
# [7] "p06_comuna_de_residencia_de_su_familia_nuclear_padres_hermanos_as_la_que_vivio_la_mayor_parte_de_infancia_y_adolescencia"
# [8] "p07_ultimo_tipo_de_establecimiento_educativo_al_realizar_su_ensenanza_media"
# [9] "p08_puntaje_final_obtenido_en_la_prueba_de_seleccion_universitaria_poderado_segun_carrera_elegida"
# [10] "p09_cual_de_estas_situaciones_describe_mejor_su_actividad_principal_durante_el_ultimo_mes"
# [11] "p10_indique_el_maximo_nivel_educativo_obtenido_por_su_madre"
# [12] "p11_actualmente_su_madre_trabaja"
# [13] "p12_cual_es_la_ocupacion_u_oficio_actual_de_su_madre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre"
# [14] "p13_indique_el_maximo_nivel_educativo_obtenido_por_su_padre"
# [15] "p14_actualmente_su_padre_trabaja"
# [16] "p15_cual_es_la_ocupacion_u_oficio_actual_de_su_padre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre"
# [17] "p17_quien_es_el_principal_sostenedor_a_de_su_hogar_actual_quien_aporta_mas_ingresos"
# [18] "p18_en_la_sociedad_comunmente_existen_distintos_grupos_o_clases_sociales_las_personas_de_clase_social_alta_son_las_que_tienen_los_ingresos_mas_altos_el_mayor_nivel_de_educacion_y_los_trabajos_mas_valorados_las_personas_de_clase_social_baja_son_las_que_tienen_los_ingresos_mas_bajos_el_menor_nivel_de_educacion_y_los_trabajos_menos_valorados_entre_estas_clases_existen_otras_intermedias_segun_su_opinion_a_cual_de_los_siguientes_grupos_o_clases_sociales_pertenece_usted"
# [19] "p19_podria_decirme_si_su_casa_tiene_computador_ya_sea_notebook_o_de_escritorio_actualmente"
# [20] "p20_podria_decirme_si_usted_tiene_computador_para_uso_personal_ya_sea_notebook_o_de_escritorio_actualmente"
# [21] "p21_podria_decirme_si_usted_tiene_smartphone_personal_actualmente"
# [22] "p22_con_que_frecuencia_escucha_musica"
# [23] "p23_que_tipo_de_musica_es_la_que_mas_prefiere_escuchar"
# [24] "p24_si_eligio_otra_cual"
# [25] "p25_cual_es_la_segunda_musica_que_mas_prefiere_escuchar"
# [26] "p26_si_eligio_otra_cual"
# [27] "p27_con_que_dispositivo_suele_escuchar_mas_musica"
# [28] "p28_cual_es_principal_sitio_programa_o_aplicacion_para_bajar_o_escuchar_musica"
# [29] "p29_si_respondio_otro_cual"
# [30] "p30_cual_es_la_red_social_pasa_mas_tiempo"
# [31] "p31_si_respondio_otra_cual"
# [32] "p32_y_cual_es_la_segunda_red_social_pasa_mas_tiempo"
# [33] "p33_si_respondio_otra_cual"
# genero un vector con todas las columnas que quiero renombrar
cols_a_renombrar <- c(
"p01_nombre_del_entrevistado_a",
"p02_edad_del_a_entrevistado",
"p03_genero_del_a_entrevistado_a",
"p04_ano_en_que_se_encuentra_de_la_carrera_1_2_3_4_5",
"p05_comuna_actual_de_residencia",
"p06_comuna_de_residencia_de_su_familia_nuclear_padres_hermanos_as_la_que_vivio_la_mayor_parte_de_infancia_y_adolescencia",
"p07_ultimo_tipo_de_establecimiento_educativo_al_realizar_su_ensenanza_media",
"p08_puntaje_final_obtenido_en_la_prueba_de_seleccion_universitaria_poderado_segun_carrera_elegida",
"p09_cual_de_estas_situaciones_describe_mejor_su_actividad_principal_durante_el_ultimo_mes",
"p10_indique_el_maximo_nivel_educativo_obtenido_por_su_madre",
"p11_actualmente_su_madre_trabaja",
"p12_cual_es_la_ocupacion_u_oficio_actual_de_su_madre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre",
"p13_indique_el_maximo_nivel_educativo_obtenido_por_su_padre",
"p14_actualmente_su_padre_trabaja",
"p15_cual_es_la_ocupacion_u_oficio_actual_de_su_padre_describa_las_principales_tareas_y_funciones_en_el_puesto_de_trabajo_actual_de_su_madre",
"p17_quien_es_el_principal_sostenedor_a_de_su_hogar_actual_quien_aporta_mas_ingresos",
"p18_en_la_sociedad_comunmente_existen_distintos_grupos_o_clases_sociales_las_personas_de_clase_social_alta_son_las_que_tienen_los_ingresos_mas_altos_el_mayor_nivel_de_educacion_y_los_trabajos_mas_valorados_las_personas_de_clase_social_baja_son_las_que_tienen_los_ingresos_mas_bajos_el_menor_nivel_de_educacion_y_los_trabajos_menos_valorados_entre_estas_clases_existen_otras_intermedias_segun_su_opinion_a_cual_de_los_siguientes_grupos_o_clases_sociales_pertenece_usted",
"p19_podria_decirme_si_su_casa_tiene_computador_ya_sea_notebook_o_de_escritorio_actualmente",
"p20_podria_decirme_si_usted_tiene_computador_para_uso_personal_ya_sea_notebook_o_de_escritorio_actualmente",
"p21_podria_decirme_si_usted_tiene_smartphone_personal_actualmente",
"p22_con_que_frecuencia_escucha_musica",
"p23_que_tipo_de_musica_es_la_que_mas_prefiere_escuchar",
"p24_si_eligio_otra_cual",
"p25_cual_es_la_segunda_musica_que_mas_prefiere_escuchar",
"p26_si_eligio_otra_cual",
"p27_con_que_dispositivo_suele_escuchar_mas_musica",
"p28_cual_es_principal_sitio_programa_o_aplicacion_para_bajar_o_escuchar_musica",
"p29_si_respondio_otro_cual",
"p30_cual_es_la_red_social_pasa_mas_tiempo",
"p31_si_respondio_otra_cual",
"p32_y_cual_es_la_segunda_red_social_pasa_mas_tiempo",
"p33_si_respondio_otra_cual")
#genero un vector sólo con las 3 primeras letras: p01
nuevos_nombres <- str_sub(cols_a_renombrar, 1, 3)  #no muestro los argumentos
nuevos_nombres <- str_sub(string = cols_a_renombrar, start = 1, end = 3 ) #muestro los argumentos
nuevos_nombres
#primer argumento - string = de donde saco los nombres: el vector creado
#segundo argumento - start = desde que posición extraigo (p)
#tercer argumento - end= hasta donde (1)
#renombro considerando todas las columnas elegidas asignando nuevos nombres
datos <- datos %>%
rename_at(vars(cols_a_renombrar), ~ nuevos_nombres) #recodificación múltiples con un vector
#renombro algunas variables en específico
#veo categorías de todas las variables
sapply(datos, FUN = unique)
#posibilidad de renombrar uno por uno las variables de interés.
datos <- datos %>% dplyr::rename(nombre = p01,  # primero nuevo nombre y luego nombre antiguo
edad = p02,
genero = p03,
annio = p04,
comuna_actual = p05,
comuna_pre= p06,
tipo_colegio = p07,
puntaje = p08,
estudio_trabajo = p09,
educacion_madre = p10,
trabaja_madre =p11,
empleo_madre =p12,
educacion_padre =p13,
trabaja_padre =p14,
empleo_padre = p15,
psdhogar = p17,
clase_social_subjetiva = p18)
# selección y transformación de variables ---------------------------------
DataExplorer::create_report(datos)
#sino funciona el DataExplorer
# install.packages("htmltools", version = "0.5.4")
# library(htmltools)
# library(DataExplorer)
#función para realizar un reporte general introductorio
#me permite ver posibles transformaciones o limpiezas
# Transformaciones/limpieza en variables categóricas
names (datos)
unique(datos$comuna_actual)
# para comuna actual
datos$comuna_actual <- tolower(datos$comuna_actual) #todas a minusculas
datos$comuna_actual  <- gsub(pattern = " ", replacement = "", x = datos$comuna_actual) #elimino los espacios
# datos$comuna_actual  <- gsub(" ", "", datos$comuna_actual)
table(datos$comuna_actual)
# para comuna pre
datos$comuna_pre <- tolower(datos$comuna_pre)
datos$comuna_pre  <- gsub(" ", "", datos$comuna_pre)
table(datos$comuna_pre)
#utilizando el siguiente ejemplo, elimine los tildes y la ñ
# categories <- gsub(" ", "_", categories)
# categories <- gsub("[áÁ]", "a", categories)
# categories <- gsub("[éÉ]", "e", categories)
# categories <- gsub("[íÍ]", "i", categories)
# categories <- gsub("[óÓ]", "o", categories)
# categories <- gsub("[úÚ]", "u", categories)
# categories <- gsub("ñ", "n", categories)
#saco tildes y ñ de comuna actual
datos$comuna_actual  <- gsub("[áÁ]", "a", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[éÉ]", "e", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[íÍ]", "i", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[óÓ]", "o", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("[úÚ]", "u", x = datos$comuna_actual)
datos$comuna_actual  <- gsub("ñ", "n", x = datos$comuna_actual)
table(datos$comuna_actual)
#saco tildes y ñ de comuna previa
datos$comuna_pre  <- gsub("[áÁ]", "a", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[éÉ]", "e", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[íÍ]", "i", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[óÓ]", "o", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("[úÚ]", "u", x = datos$comuna_pre)
datos$comuna_pre  <- gsub("ñ", "n", x = datos$comuna_pre)
table(datos$comuna_pre)
#otra opción para sacar tildes, ñ, transformar todo a minúscula y eliminar espacios
library(tidyverse)
names(datos)
datos <- datos %>%
mutate(empleo_madre = stringi::stri_trans_general(empleo_madre, "Latin-ASCII"),
empleo_padre = stringi::stri_trans_general(empleo_padre, "Latin-ASCII"),
empleo_madre = tolower (empleo_madre),
empleo_padre = tolower (empleo_padre),
empleo_madre = gsub(" ", "_", empleo_madre),
empleo_padre= gsub(" ", "_", empleo_padre))
datos <- datos %>%
mutate(puntaje = ifelse(puntaje == "700+", yes= "700", no= puntaje))
install.packages("chilemapas")
install.packages("chilemapas")
library(chilemapas)
poblacion_adulto_mayor_comunas <- censo_2017_comunas %>%
filter(as.integer(edad) >= 14) %>%
group_by(codigo_comuna) %>%
summarise(pob_adulto_mayor = sum(poblacion))
library(dplyr)
library(ggplot2)
poblacion_adulto_mayor_comunas <- censo_2017_comunas %>%
filter(as.integer(edad) >= 14) %>%
group_by(codigo_comuna) %>%
summarise(pob_adulto_mayor = sum(poblacion))
comunas_los_rios <- mapa_comunas %>%
filter(codigo_region == 14) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
left_join(poblacion_adulto_mayor_comunas)
# estos colores vienen del paquete colRoz
# https://github.com/jacintak/colRoz
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
ggplot(comunas_los_rios) +
geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
geom_sf_label(aes(label = nombre_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
labs(title = "Poblacion de 65 anios y mas en la Region de los Rios") +
theme_minimal(base_size = 13)
censo_2017_comunas
mapa_comunas
unique(mapa_comunas$codigo_region)
comunas_los_rios <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
left_join(poblacion_adulto_mayor_comunas)
ggplot(comunas_los_rios) +
geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
geom_sf_label(aes(label = nombre_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
labs(title = "Poblacion de 65 anios y mas en la Region de los Rios") +
theme_minimal(base_size = 13)
comunas_los_rm <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
left_join(poblacion_adulto_mayor_comunas)
ggplot(comunas_los_rm) +
geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
labs(title = "Poblacion de 65 anios y mas en la Region de los Rios") +
theme_minimal(base_size = 13)
poblacion_adulto_mayor_comunas <- censo_2017_comunas %>%
filter(as.integer(edad) >= 65) %>%
group_by(codigo_comuna) %>%
summarise(pob_adulto_mayor = sum(poblacion))
comunas_los_rm <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
left_join(poblacion_adulto_mayor_comunas)
ggplot(comunas_los_rm) +
geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
labs(title = "Poblacion de 65 anios y mas en la Region Metropolitana") +
theme_minimal(base_size = 13)
poblacion_adulto_mayor_comunas <- censo_2017_comunas %>%
filter(as.integer(edad) >= 14) %>%
group_by(codigo_comuna) %>%
summarise(pob_adulto_mayor = sum(poblacion))
comunas_los_rm <- mapa_comunas %>%
filter(codigo_region == 13) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
left_join(poblacion_adulto_mayor_comunas)
ggplot(comunas_los_rm) +
geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
labs(title = "Poblacion de 65 anios y mas en la Region Metropolitana") +
theme_minimal(base_size = 13)
poblacion_adulto_mayor_comunas <- censo_2017_comunas %>%
filter(as.integer(edad) >= 14) %>%
group_by(codigo_comuna) %>%
summarise(pob_adulto_mayor = sum(poblacion))
comunas_los_rios <- mapa_comunas %>%
filter(codigo_region == 14) %>%
left_join(
codigos_territoriales %>%
select(matches("comuna"))
) %>%
left_join(poblacion_adulto_mayor_comunas)
# estos colores vienen del paquete colRoz
# https://github.com/jacintak/colRoz
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")
ggplot(comunas_los_rios) +
geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
geom_sf_label(aes(label = nombre_comuna, geometry = geometry)) +
scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
labs(title = "Poblacion de 65 anios y mas en la Region de los Rios") +
theme_minimal(base_size = 13)
