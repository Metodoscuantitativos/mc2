# install.packages("tidyverse")
library(tidyverse)
# Data frame
dat <-
incomeInequality %>%
select(Year, P99, median) %>%
rename(income_median = median,
income_99percent = P99) %>%
pivot_longer(cols = starts_with("income"),
names_to = "income",
names_prefix = "income_")
# elimino algunos datos
rm(c_religionxraza1)
rm(df)
rm(f_religion1)
rm(f_religion2)
rm(grid)
datos %>%
filter (!(religion =="Sin respuesta")) %>%
count(religion) %>%
mutate(Porcentaje = n / sum(n) * 100) %>%
mutate(Porcentaje = round (Porcentaje, 2)) %>%
arrange(desc(Porcentaje)) %>%
rename(Frecuencia = n, Religion= religion)
f_religion <- datos %>%
filter (!(religion =="Sin respuesta")) %>%
count(religion) %>%
mutate(Porcentaje = n / sum(n) * 100) %>%
mutate(Porcentaje = round (Porcentaje, 2)) %>%
arrange(desc(Porcentaje)) %>%
rename(Frecuencia = n, Religion= religion)
View(f_religion)
# 1.1. geom_col()####
#gráfico de columnas
names(f_religion)
View(f_religion)
#0.1.A: primera versión del gráfico
ggplot(data= f_religion, aes(x = Religion, y = Frecuencia)) +
geom_col()
#Alinear nombres de las etiquetas
ggplot(f_religion, aes(x = Religion, y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) #dejo los nombres en 90 grados
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) #ajusto etiquetas
#Ordenar de menor a mayor frecuencia
#y = fct_reorder(variable_del_eje, variable_por_la_que_Se_ordena)
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) #ajusto etiquetas
#Ordenar de mayor a menor frecuencia
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia, desc), y = Frecuencia)) + #con desc
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Cambiar la orientación de los ejes: cambio el que estaba en x a y.
ggplot(f_religion, aes(x = Frecuencia, y = fct_reorder(Religion, Frecuencia))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
coord_flip()
View(f_religion)
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs (title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
x = "%",
y = "Religiones",
caption = "fuente: Libreria Datos")
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs (title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
xlab("") + ylab("") # se fue lo que decía Religiones y el %
# Le pongo los porcentajes al final con geom_text()
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "grey") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato", color="black") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 5)
#le agrego color "tomato"
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") + #fill= rellena adentro
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3)
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()
#cargar las librerías a utilizar
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer,
datos,  knitr, gt, summarytools, ggthemes, hrbrthemes)
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum()
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_economist()
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill = "tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_economist_white()
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_economist_white()
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_excel()
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_minimal()
()
#le agrego un tema, hago que esté en negrita y con nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
geom_col(fill="tomato") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos")+
geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
theme_ipsum ()
#quiero cambiar los colores y sólo le pondré porcentajes a algunos
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje), fill = Religion)) +
geom_col() +
xlab("") + ylab("") +
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos") +
geom_text(aes(label = ifelse(Religion %in% c("Protestante", "Católica", "Ninguna", "Cristiana"), Porcentaje, "")),
hjust = 1, nudge_x = -.5, size = 4, fontface = "bold") +
theme_minimal()+
scale_fill_viridis_d(option = "C", guide = "none")
ggplot(datos, aes(x = religion)) +
geom_bar()
#pero es más complejo ordenar y transformar
ggplot(datos, aes(x = fct_reorder(religion, religion, function(x) sum(datos$religion == x)), y = ..count..)) +
geom_bar()
View(f_religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_discrete( guide = "legend", limits = f_religion$Religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_economist( guide = "legend", limits = f_religion$Religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_ipsum( guide = "legend", limits = f_religion$Religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_viridis_d( guide = "legend", limits = f_religion$Religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_distiller( guide = "legend", limits = f_religion$Religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_canva( guide = "legend", limits = f_religion$Religion)
ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") + # esto permite hacer gráfico de torta
labs(title = "Religión en Estados Unidos",
subtitle = "según datos de CENSO",
caption = "fuente: Libreria Datos",
fill = "Religión") +
theme_ipsum() +
scale_fill_discrete( guide = "legend", limits = f_religion$Religion)
datos$raza <- datos$raza %>% fct_relevel(c("Blanca", "Negra", "Otra")) %>%
fct_drop("No aplica") #ordeno los resultados según raza y elimino la categoría no aplica
datos$religion <- datos$religion %>% fct_relevel(c("Protestante",
"Católica",
"Ninguna",
"Cristiana",
"Judía",
"Budismo",
"Inter o no confesional",
"Musulmana/Islam",
"Cristiana ortodoxa",
"Hinduismo",
"Otra religión oriental",
"Nativa americana",
"Otra",
"No sabe",
"No aplica",
"Sin respuesta"
)) %>%
fct_drop("No aplica")
datos$religion <- datos$religion %>% fct_relevel(c("Protestante",
"Católica",
"Ninguna",
"Cristiana",
"Judía",
"Budismo",
"Inter o no confesional",
"Musulmana/Islam",
"Cristiana ortodoxa",
"Hinduismo",
"Otra religión oriental",
"Nativa americana",
"Otra",
"No sabe",
"No aplica",
"Sin respuesta"
)) %>%
fct_drop("No aplica")
#Forma 1: Integrar las proporciones al gráfico de barras
ggplot(data = datos, aes(x = raza, fill = religion)) +
geom_bar(position = "fill") + ylab("Proporciones")+ # con "fill"
theme_classic()
colors <- c("#440154", "#b2df8a", "#365A8C", "#277E8E", "#1FA088", "#44A96C", "#7FBC41",
"#B3CC2A", "#FDE725", "#46337E", "#b07aa1", "#ff9da7", "#9c755f",
"#bab0ac", "#5c5c5c")
colors
ggplot(data = datos, aes(x = raza, fill = religion)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors) #scale_fill_manual: poner los colores manualmente
datos %>%
mutate(partido = as.character(partido)) %>%
mutate(partido = if_else(partido %in% c("Sin respuesta", "No aplica"), as.character(NA), partido)) %>%
freq(partido, prop = TRUE, order = "freq", report.nas =  FALSE)
datos <- datos %>%
mutate(partido_r = case_when(partido ==  "No fuertemente demócrata" ~ "Demócrata",
partido ==  "Fuertemente demócrata" ~ "Demócrata",
partido ==  "Ind, pro dem" ~ "Demócrata",
partido ==  "Fuertemente republicano" ~ "Republicano",
partido ==  "No fuertemente republicano" ~ "Republicano",
partido ==  "Ind, pro rep" ~ "Republicano",
partido ==  "Otro partido" ~ "Otro partido",
partido ==  "Independiente" ~ "Independiente",
partido ==  "No sabe" ~ "No sabe"))
class(datos$partido_r)
datos$partido_r <- as.factor(datos$partido_r) #por qué se transforma a factor?
class(datos$partido_r)
datos$partido_r <- datos$partido_r %>% fct_relevel(c("Demócrata", "Republicano",
"Independiente", "Otro partido", "No sabe"))
ggplot(data = datos, aes(x = raza, fill = partido_r)) +
geom_bar(position = "fill") +
ylab("Proporciones") +
theme_classic() +
scale_fill_manual(values = colors)
ggplot(data = datos, aes(x = raza, fill = partido_r)) +
geom_bar(position = "fill") +
ylab("Orientación Política") +
theme_classic() +
scale_fill_manual(values = colors) +
labs(fill = "Orientación Política")
#¿Qué hacer con NA?
#para eliminar datos NA: na.omit(datos)
ggplot(data = na.omit(datos), aes(x = raza, fill = partido_r)) + #esto elimina datos perdidos
geom_bar(position = "fill") +
ylab("Orientación Política") +
theme_classic() +
scale_fill_manual(values = colors) +
labs(fill = "Orientación Política")
ggplot(data = na.omit(datos), aes(x = partido_r)) +
geom_bar() +
ylab("Frecuencias") +
theme_classic()
ggplot(data = na.omit(datos), aes(x = partido_r)) +
geom_bar() +
ylab("Frecuencias") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = na.omit(datos), aes(x = partido_r)) +
geom_bar() +
ylab("Frecuencias") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = na.omit(datos), aes(x = partido_r)) +
geom_bar() +
ylab("Frecuencias") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = na.omit(datos), aes(x = partido_r, fill=partido_r)) + #fill=partido: cambia colores por partido
geom_bar() +
ylab("Frecuencias") +
xlab("Orientación Política") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "Orientación Política")
ggplot(data = na.omit(datos), aes(x = partido_r, fill=partido_r)) + #fill=partido: cambia colores por partido
geom_bar() +
ylab("Frecuencias") +
xlab("Orientación Política") +
theme_economist()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "Orientación Política")
ggplot(data = na.omit(datos), aes(x = partido_r, fill=partido_r)) + #fill=partido: cambia colores por partido
geom_bar() +
ylab("Frecuencias") +
xlab("Orientación Política") +
theme_ipsum()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "Orientación Política")
ggplot(data = na.omit(datos), aes(x = partido_r, fill=partido_r)) + #fill=partido: cambia colores por partido
geom_bar() +
ylab("Frecuencias") +
xlab("Orientación Política") +
theme_classic()+
facet_wrap (~ raza) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "Orientación Política")
datos$raza <- datos$raza %>% fct_relevel(c("Blanca", "Negra", "Otra")) %>%
fct_drop("No aplica") #ordeno los resultados según raza y elimino la categoría no aplica
datos$religion <- datos$religion %>% fct_relevel(c("Protestante",
"Católica",
"Ninguna",
"Cristiana",
"Judía",
"Budismo",
"Inter o no confesional",
"Musulmana/Islam",
"Cristiana ortodoxa",
"Hinduismo",
"Otra religión oriental",
"Nativa americana",
"Otra",
"No sabe",
"No aplica",
"Sin respuesta"
)) %>%
fct_drop("No aplica")
datos %>%
select(religion, raza) %>%
table() %>%
chisq.test()
#Chi cuadrado: Forma 2
ctable( x = datos$religion, y = datos$raza, prop = "c", justify = "l",
chisq = T)
# Práctica: realice el test de Chi cuadrado para partido_r y raza
datos %>%
select(partido_r, raza) %>%
table() %>%
chisq.test()
#Chi cuadrado: Forma 2
ctable( x = datos$religion, y = datos$raza, prop = "c", justify = "l",
chisq = T)
