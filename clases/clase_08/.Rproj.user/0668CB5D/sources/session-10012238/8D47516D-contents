

#Cargo librerias
pacman::p_load(tidyverse, openxlsx, readxl,readr,janitor, forcats, writexl, DataExplorer, 
               datos,  knitr, gt, summarytools, ggthemes, hrbrthemes)

# webshot::install_phantomjs() # para exportar tablas de knitr

#abro la base a trabajar
datos <- datos::encuesta


# Análisis univariado ####

#Frecuencia de religión
#forma (A)

datos %>% 
  mutate(religion = as.character(religion)) %>%
  mutate(religion = if_else(religion %in% c("Sin respuesta", "No aplica"), as.character(NA), religion)) %>% 
  freq(religion, prop = TRUE, order = "freq", report.nas =  FALSE)  %>% 
  tb()


#forma (B)
f_religion <- datos %>%
  filter (!(religion =="Sin respuesta")) %>% 
  count(religion) %>%
  mutate(Porcentaje = n / sum(n) * 100) %>%
  mutate(Porcentaje = round (Porcentaje, 2)) %>% 
  arrange(desc(Porcentaje)) %>% 
  rename(Frecuencia = n, Religion= religion)



#ggplot: 
#lógica de cebolla anidando las capas con el signo +

ggplot(data= base_a_utilizar, aes(x = variable_1, y = variable_2, 
                                  color =variable_que distingue_color, 
                                  fill=variable_que_rellena,)) + #de donde salen los datos, cuales son las variables
geom_algo()+ #qué tipo de gráfico se va a realizar?
labs () + #cuales serán los títulos?
guides()+ #cuadrado donde se mostrarán una descripción de categorías
theme_() #se utilizará un tema global?
  

# gráfico de columnas: geom_col()
names(f_religion)

ggplot(data= f_religion, aes(x = Religion, y = Frecuencia)) +
  geom_col()

# para alinear los nombres de las etiquetas
ggplot(f_religion, aes(x = Religion, y = Frecuencia)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

#¿Qué se le podría arreglar?
names(f_religion)

#Ordenar de menor a mayor y ajustar las etiquetas
#y = fct_reorder(variable_del_eje, variable_por_la_que_Se_ordena)

ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) #ajusto etiquetas


#Ordenar de mayor a menor
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia, desc), y = Frecuencia)) + #con desc
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


#Cambiar la orientación de los ejes: cambio el que estaba en x a y.
ggplot(f_religion, aes(x = Frecuencia, y = fct_reorder(Religion, Frecuencia))) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

#Utilizo coord_flip ()
ggplot(f_religion, aes(x = fct_reorder(Religion, Frecuencia), y = Frecuencia)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  coord_flip()



#Cambio de etiquetas
names(f_religion)
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs (title = "Religión en Estados Unidos", 
        subtitle = "según datos de CENSO",
        x = "%",
        y = "Religiones",
        caption = "fuente: Libreria Datos") 


#Elimino las etiquetas de X e y
names(f_religion)
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs (title = "Religión en Estados Unidos", 
        subtitle = "según datos de CENSO",
        caption = "fuente: Libreria Datos")+
  xlab("") + ylab("") # se fue lo que decía Religiones y el %


# Le pongo los porcentajes al final con geom_text()
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
  geom_col() +
  geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
            hjust = -0.1, size = 3) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab("") + ylab("") +
  labs(title = "Religión en Estados Unidos", 
       subtitle = "según datos de CENSO",
       caption = "fuente: Libreria Datos")


#le agrego color gris
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
  geom_col(fill = "tomato") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab("") + ylab("") +
  labs(title = "Religión en Estados Unidos", 
       subtitle = "según datos de CENSO",
       caption = "fuente: Libreria Datos")+
  geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
            hjust = -0.1, size = 3)


#le agrego un tema, hago que esté en negrita y xon nudge que las barras se separen
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje))) +
  geom_col(fill = "tomato") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  xlab("") + ylab("") +
  labs(title = "Religión en Estados Unidos", 
       subtitle = "según datos de CENSO",
       caption = "fuente: Libreria Datos")+
  geom_text(aes(label = paste0(round(Porcentaje, 1), "%")), #concatena porcentaje con un decimal y "%".
            hjust = -0.1, size = 3, nudge_x = -.9, fontface= "bold")+
  theme_ipsum()
  

unique(f_religion$Religion)

#quiero cambiar los colores y sólo le pondré porcentajes a algunos
ggplot(f_religion, aes(x = Porcentaje, y = fct_reorder(Religion, Porcentaje), fill = Religion)) +
  geom_col() +
  xlab("") + ylab("") +
  labs(title = "Religión en Estados Unidos", 
       subtitle = "según datos de CENSO",
       caption = "fuente: Libreria Datos") +
  geom_text(aes(label = ifelse(Religion %in% c("Protestante", "Católica", "Ninguna", "Cristiana"), Porcentaje, "")), 
            hjust = 1, nudge_x = -.5, size = 4, fontface = "bold") + 
  theme_minimal()+
  scale_fill_viridis_d(option = "C", guide = "none") 


#geom_bar()####
#es una suerte de atajo, abrevia, no obliga a dar todos los detalles
#cuanta la frecuencia de una variable en particular directamente desde la base de datos
#no es necesario hacer una tabla con una variable y que indique la frecuencia


names(datos)

ggplot(datos, aes(x = religion)) +
  geom_bar()

#pero es más complejo ordenar y transformar
ggplot(datos, aes(x = fct_reorder(religion, religion, function(x) sum(datos$religion == x)), y = ..count..)) +
  geom_bar()


#gráfico de torta

f_religion$Religion <- factor(f_religion$Religion, levels = f_religion$Religion[order(f_religion$Porcentaje)])

ggplot(f_religion, aes(x = "", y = Porcentaje, fill = Religion)) +
  geom_bar(stat = "identity") + 
  coord_polar(theta = "y") + # esto permite hacer gráfico de torta
  labs(title = "Religión en Estados Unidos", 
       subtitle = "según datos de CENSO",
       caption = "fuente: Libreria Datos",
       fill = "Religión") +
  theme_ipsum() +
  scale_fill_discrete( guide = "legend", limits = f_religion$Religion)


#por default: geom_bar cuenta las frecuencias, esto sería geom_bar(stat = "count")
#stat = "identity": cada barra representa el porcentaje de la categoría.


#II. Análisis bivariado ####
#00. gráfico raza por religión

#ordeno las variables raza y variables religión: 

datos$raza <- datos$raza %>% fct_relevel(c("Blanca", "Negra", "Otra")) %>% 
  fct_drop("No aplica") #ordeno los resultados según raza y elimino la categoría no aplica

datos$religion <- datos$religion %>% fct_relevel(c("Protestante", 
                                                   "Católica", 
                                                   "Ninguna", 
                                                   "Cristiana",
                                                   "Judía", 
                                                   "Budismo", 
                                                   "Inter o no confesional", 
                                                   "Musulmana/Islam", 
                                                   "Cristiana ortodoxa", 
                                                   "Hinduismo", 
                                                   "Otra religión oriental", 
                                                   "Nativa americana", 
                                                   "Otra", 
                                                   "No sabe", 
                                                   "No aplica", 
                                                   "Sin respuesta"
)) %>% 
  fct_drop("No aplica")


#Forma 1: Integrar las proporciones al gráfico de barras
ggplot(data = datos, aes(x = raza, fill = religion)) +
  geom_bar(position = "fill") + ylab("Proporciones")+
  theme_classic()


#Forma 1.1.: elegir colores en específico
# Vector de colores contrastantes
colors <- c("#440154", "#b2df8a", "#365A8C", "#277E8E", "#1FA088", "#44A96C", "#7FBC41", 
                     "#B3CC2A", "#FDE725", "#46337E", "#b07aa1", "#ff9da7", "#9c755f", 
                     "#bab0ac", "#5c5c5c") 
                     
# defino mi paleta de colores, deben ser al menos la cantidad de mis categorías. 



ggplot(data = datos, aes(x = raza, fill = religion)) +
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  theme_classic() +
  scale_fill_manual(values = colors) #poner los colores manualmente 



#páginas para ver códigos de los colores: 
#https://www.color-hex.com/
#https://www.w3schools.com/colors/colors_picker.asp


#Ejemplo 2
#raza y partido

#hago recodificación anterior

datos %>%
  mutate(partido = as.character(partido)) %>%
  mutate(partido = if_else(partido %in% c("Sin respuesta", "No aplica"), as.character(NA), partido)) %>%
  freq(partido, prop = TRUE, order = "freq", report.nas =  FALSE)

datos <- datos %>%
  mutate(partido_r = case_when(partido ==  "No fuertemente demócrata" ~ "Demócrata",
                               partido ==  "Fuertemente demócrata" ~ "Demócrata",
                               partido ==  "Ind, pro dem" ~ "Demócrata",
                               partido ==  "Fuertemente republicano" ~ "Republicano",
                               partido ==  "No fuertemente republicano" ~ "Republicano",
                               partido ==  "Ind, pro rep" ~ "Republicano",
                               partido ==  "Otro partido" ~ "Otro partido",
                               partido ==  "Independiente" ~ "Independiente", 
                               partido ==  "No sabe" ~ "No sabe"))

class(datos$partido_r)
datos$partido_r <- as.factor(datos$partido_r) #por qué se transforma a factor?
class(datos$partido_r)

datos$partido_r <- datos$partido_r %>% fct_relevel(c("Demócrata", "Republicano", 
                                                     "Independiente", "Otro partido", "No sabe"))

#Práctica realice el gráfico anterior considerando partido_r
#cambiele las etiquetas con:
#ylab ("Orientación Política"): para eje y
#labs(fill = "Orientación Política"): para para el recuerdo que indica los colores de fill

ggplot(data = datos, aes(x = raza, fill = partido_r)) +
  geom_bar(position = "fill") +
  ylab("Proporciones") +
  theme_classic() +
  scale_fill_manual(values = colors) 

ggplot(data = datos, aes(x = raza, fill = partido_r)) +
  geom_bar(position = "fill") +
  ylab("Orientación Política") +
  theme_classic() +
  scale_fill_manual(values = colors) +
  labs(fill = "Orientación Política")

  
#¿Qué hacer con NA?
#para eliminar datos NA
ggplot(data = na.omit(datos), aes(x = raza, fill = partido_r)) + #esto elimina datos perdidos
  geom_bar(position = "fill") +
  ylab("Orientación Política") +
  theme_classic() +
  scale_fill_manual(values = colors) +
  labs(fill = "Orientación Política")


#Forma dos: facet_wrap
ggplot(data = na.omit(datos), aes(x = partido_r)) +
  geom_bar() +
  ylab("Frecuencias") +
  theme_classic()+
  facet_wrap (~ raza) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


ggplot(data = na.omit(datos), aes(x = partido_r, fill=partido_r)) +
  geom_bar() +
  ylab("Frecuencias") +
  xlab("Orientación Política") +
  theme_classic()+
  facet_wrap (~ raza) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))+
  labs(fill = "Orientación Política")


#práctica
#01. recodifique con mutate en tres grupos de edad: 18 a 35, 36 a 64 y 65 y más (clase 5)


#02. realice una distribución de frecuencias con freq (clase 6)


#03. realice una tabla de contingencia con porcentaje en columnas edadr y partido_r  (clase 6)
# ¿Cuál sería su variable independiente y su variable dependiente?


#04. realice una gráfico de barra par la variable edad_r


#05. realice un gráfico de barras de las distintas edades llenado (fill= partido_r)
#donde el fill sean las proporciones: position = "fill"






#librería chilemapas
library(chilemapas)
library(dplyr)
library(ggplot2)

poblacion_adulto_mayor_comunas <- censo_2017_comunas %>% 
  filter(as.integer(edad) >= 14) %>% 
  group_by(codigo_comuna) %>% 
  summarise(pob_adulto_mayor = sum(poblacion))

comunas_los_rios <- mapa_comunas %>% 
  filter(codigo_region == 14) %>% 
  left_join(
    codigos_territoriales %>% 
      select(matches("comuna"))
  ) %>% 
  left_join(poblacion_adulto_mayor_comunas)

# estos colores vienen del paquete colRoz
# https://github.com/jacintak/colRoz
paleta <- c("#DCA761", "#CFB567", "#BFBC71", "#9EA887", "#819897")

ggplot(comunas_los_rios) + 
  geom_sf(aes(fill = pob_adulto_mayor, geometry = geometry)) +
  geom_sf_label(aes(label = nombre_comuna, geometry = geometry)) +
  scale_fill_gradientn(colours = rev(paleta), name = "Poblacion\nadulto mayor") +
  labs(title = "Poblacion de 65 anios y mas en la Region de los Rios") +
  theme_minimal(base_size = 13)

